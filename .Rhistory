ylab = "Viral load", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplotDWVa[[gene]] <- p
}
# plot the viral load of DWVa in 9 silenced genes:
grid.arrange(boxplotDWVa$Anl, boxplotDWVa$clmd, boxplotDWVa$CuP14, boxplotDWVa$CuP8, boxplotDWVa$Glut, boxplotDWVa$Gly, boxplotDWVa$Sar, boxplotDWVa$Trans, boxplotDWVa$Twitch, nrow = 3, ncol = 3)
Padjust
datDWVa
DWVaLoad
viralLoad
# plot DWVa viral loads for silenced and control-mites, in a boxplot
DWVaLoad <- filter(viralLoad, virus == "DWVa")
DWVaLoad
# plot DWVa viral loads for silenced and control-mites, in a boxplot
DWVaLoad <- filter(viralLoad, virus == "DWVa")
DWVaLoad$gene = gsub('exp', 'DWVa', DWVaLoad$gene)
DWVaLoad <- dplyr::rename(DWVaLoad, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
DWVaLoad
# plot VDV2 viral loads for silenced and control-mites, in a boxplot
VDV2Load <- viralLoad %>% filter(virus == "VDV2") #%>% gsub('exp', 'VDV2')
VDV2Load$gene = gsub('exp', 'VDV2', VDV2Load$gene)
VDV2Load <- dplyr::rename(VDV2Load, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
VDV2Load
datVDV2 <- filter(dat_virus, Gene == "VDV2")
datVDV2$Experiment = gsub('exp', 'VDV2', datVDV2$Experiment)
boxplotVDV2 <- list()
for (gene in unique(datVDV2$Experiment))
{
table <- filter(datVDV2, Experiment == gene)
N <- nrow(table)
VDV2padj <- filter(VDV2Load, Gene == gene)
Padjust <- formattable(as.double(VDV2padj[1,4], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Viral load", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplotVDV2[[gene]] <- p
}
#Padjust <- formattable(as.double(filter(VDV2Load$padj[, gene==gene[1]), digits = 2, format = "f"))
# plot the viral load of VDV2 in 9 silenced genes:
grid.arrange(boxplotVDV2$Anl, boxplotVDV2$clmd, boxplotVDV2$CuP14, boxplotVDV2$CuP8, boxplotVDV2$Glut, boxplotVDV2$Gly, boxplotVDV2$Sar, boxplotVDV2$Trans, boxplotVDV2$Twitch, nrow = 3, ncol = 3)
VDV2Load
viralLoad
results_load
dat_virus
dat_virus <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/virus_in_silenced.csv")
dat_gene <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/Silencing_qPCR.csv")
dat_gene <- dat_gene %>%
filter((Treatment %in% c("Silenced", "Control"))) %>%
filter(Time == "48h")
View(dat_gene)
View(dat_virus)
results_gene <- data.frame()
for (gene in unique(dat_gene$Gene))
{
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_gene, Gene == gene))
results_gene <- rbind(results_gene, data.frame(gene = gene, pvalue = test$p.value))
}
results_gene
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
geneExp <- group_by(results_gene, gene) %>%
mutate(padj = p.adjust(pvalue, method = "fdr"))
geneExp <- dplyr::rename(geneExp, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
geneExp
# plot all genes expression for silenced and control-mites, in a boxplot
boxplot <- list()
for (gene in unique(dat_gene$Gene))
{
table <- filter(dat_gene, Gene == gene)
N <- nrow(table)
geneExppadj <- filter(geneExp, Gene == gene)
Padjust <- formattable(as.double(geneExppadj[1,3], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Relative expression", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplot[[gene]] <- p
}
geneExp
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
results_load
View(results_load)
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
View(viralLoad)
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "all", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "less", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
viralLoad
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "greater", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
viralLoad
View(viralLoad)
suppressPackageStartupMessages(library(tidyverse))
library(dplyr)
library(tidyverse)
library(ggplot2)
library(Rmisc)
library(ggpubr)
library(anchors)
library(broom)
library(HDInterval)
library(coda)
library(brms)
library(devtools)
library(rjags)
library(BEST)
library(ggpubr)
library(ggthemes)
library(car)
library(stats)
library(moments)
library(intervcomp)
library(grid)
library(formattable)
library(gridExtra)
library(ggsignif)
library(patchwork)
library(cowplot)
dat_virus <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/virus_in_silenced.csv")
dat_gene <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/Silencing_qPCR.csv")
dat_gene <- dat_gene %>%
filter((Treatment %in% c("Silenced", "Control"))) %>%
filter(Time == "48h")
results_gene <- data.frame()
for (gene in unique(dat_gene$Gene))
{
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_gene, Gene == gene))
results_gene <- rbind(results_gene, data.frame(gene = gene, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
geneExp <- group_by(results_gene, gene) %>%
mutate(padj = p.adjust(pvalue, method = "fdr"))
geneExp <- dplyr::rename(geneExp, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
# plot all genes expression for silenced and control-mites, in a boxplot
boxplot <- list()
for (gene in unique(dat_gene$Gene))
{
table <- filter(dat_gene, Gene == gene)
N <- nrow(table)
geneExppadj <- filter(geneExp, Gene == gene)
Padjust <- formattable(as.double(geneExppadj[1,3], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Relative expression", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplot[[gene]] <- p
}
# plot all 11 genes in one figure
grid.arrange(boxplot$Anl, boxplot$clmd, boxplot$Chl, boxplot$CuP14, boxplot$CuP8, boxplot$Glut, boxplot$Gly, boxplot$HDD, boxplot$Prolin, boxplot$Sar, boxplot$Trans, boxplot$Twitch, nrow = 3, ncol = 4)
#lapply(boxplot, grid.arrange, nrow = 4, ncol = 3)
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "greater", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
viralLoad
View(viralLoad)
viralLoad
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "greater", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
viralLoad
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
suppressPackageStartupMessages(library(tidyverse))
library(dplyr)
library(tidyverse)
library(ggplot2)
library(Rmisc)
library(ggpubr)
library(anchors)
library(broom)
library(HDInterval)
library(coda)
library(brms)
library(devtools)
library(rjags)
library(BEST)
library(ggpubr)
library(ggthemes)
library(car)
library(stats)
library(moments)
library(intervcomp)
library(grid)
library(formattable)
library(gridExtra)
library(ggsignif)
library(patchwork)
library(cowplot)
dat_virus <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/virus_in_silenced.csv")
dat_gene <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/Silencing_qPCR.csv")
dat_gene <- dat_gene %>%
filter((Treatment %in% c("Silenced", "Control"))) %>%
filter(Time == "48h")
results_gene <- data.frame()
for (gene in unique(dat_gene$Gene))
{
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_gene, Gene == gene))
results_gene <- rbind(results_gene, data.frame(gene = gene, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
geneExp <- group_by(results_gene, gene) %>%
mutate(padj = p.adjust(pvalue, method = "fdr"))
geneExp <- dplyr::rename(geneExp, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
# plot all genes expression for silenced and control-mites, in a boxplot
boxplot <- list()
for (gene in unique(dat_gene$Gene))
{
table <- filter(dat_gene, Gene == gene)
N <- nrow(table)
geneExppadj <- filter(geneExp, Gene == gene)
Padjust <- formattable(as.double(geneExppadj[1,3], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Relative expression", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplot[[gene]] <- p
}
# plot all 11 genes in one figure
grid.arrange(boxplot$Anl, boxplot$clmd, boxplot$Chl, boxplot$CuP14, boxplot$CuP8, boxplot$Glut, boxplot$Gly, boxplot$HDD, boxplot$Prolin, boxplot$Sar, boxplot$Trans, boxplot$Twitch, nrow = 3, ncol = 4)
#lapply(boxplot, grid.arrange, nrow = 4, ncol = 3)
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "greater", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
View(viralLoad)
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
# plot VDV2 viral loads for silenced and control-mites, in a boxplot
VDV2Load <- viralLoad %>% filter(virus == "VDV2") #%>% gsub('exp', 'VDV2')
VDV2Load$gene = gsub('exp', 'VDV2', VDV2Load$gene)
VDV2Load <- dplyr::rename(VDV2Load, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
datVDV2 <- filter(dat_virus, Gene == "VDV2")
datVDV2$Experiment = gsub('exp', 'VDV2', datVDV2$Experiment)
boxplotVDV2 <- list()
for (gene in unique(datVDV2$Experiment))
{
table <- filter(datVDV2, Experiment == gene)
N <- nrow(table)
VDV2padj <- filter(VDV2Load, Gene == gene)
Padjust <- formattable(as.double(VDV2padj[1,4], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Viral load", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplotVDV2[[gene]] <- p
}
#Padjust <- formattable(as.double(filter(VDV2Load$padj[, gene==gene[1]), digits = 2, format = "f"))
# plot the viral load of VDV2 in 9 silenced genes:
grid.arrange(boxplotVDV2$Anl, boxplotVDV2$clmd, boxplotVDV2$CuP14, boxplotVDV2$CuP8, boxplotVDV2$Glut, boxplotVDV2$Gly, boxplotVDV2$Sar, boxplotVDV2$Trans, boxplotVDV2$Twitch, nrow = 3, ncol = 3)
# plot ARV2 viral loads for silenced and control-mites, in a boxplot
ARV2Load <- filter(viralLoad, virus == "ARV2")
ARV2Load$gene = gsub('exp', 'ARV2', ARV2Load$gene)
ARV2Load <- dplyr::rename(ARV2Load, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
datARV2 <- filter(dat_virus, Gene == "ARV2")
datARV2$Experiment = gsub('exp', 'ARV2', datARV2$Experiment)
boxplotARV2 <- list()
for (gene in unique(datARV2$Experiment))
{
table <- filter(datARV2, Experiment == gene)
N <- nrow(table)
ARV2padj <- filter(ARV2Load, Gene == gene)
Padjust <- formattable(as.double(ARV2padj[1,4], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Viral load", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplotARV2[[gene]] <- p
}
# plot the viral load of ARV2 in 9 silenced genes:
grid.arrange(boxplotARV2$Anl, boxplotARV2$clmd, boxplotARV2$CuP14, boxplotARV2$CuP8, boxplotARV2$Glut, boxplotARV2$Gly, boxplotARV2$Sar, boxplotARV2$Trans, boxplotARV2$Twitch, nrow = 3, ncol = 3)
# plot DWVa viral loads for silenced and control-mites, in a boxplot
DWVaLoad <- filter(viralLoad, virus == "DWVa")
DWVaLoad$gene = gsub('exp', 'DWVa', DWVaLoad$gene)
DWVaLoad <- dplyr::rename(DWVaLoad, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
datDWVa <- filter(dat_virus, Gene == "DWVa")
datDWVa$Experiment = gsub('exp', 'DWVa', datDWVa$Experiment)
boxplotDWVa <- list()
for (gene in unique(datDWVa$Experiment))
{
table <- filter(datDWVa, Experiment == gene)
N <- nrow(table)
DWVapadj <- filter(DWVaLoad, Gene == gene)
Padjust <- formattable(as.double(DWVapadj[1,4], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Viral load", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplotDWVa[[gene]] <- p
}
# plot the viral load of DWVa in 9 silenced genes:
grid.arrange(boxplotDWVa$Anl, boxplotDWVa$clmd, boxplotDWVa$CuP14, boxplotDWVa$CuP8, boxplotDWVa$Glut, boxplotDWVa$Gly, boxplotDWVa$Sar, boxplotDWVa$Trans, boxplotDWVa$Twitch, nrow = 3, ncol = 3)
View(viralLoad)
dat_virus <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/virus_in_silenced.csv")
dat_gene <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/Silencing_qPCR.csv")
dat_gene <- dat_gene %>%
filter((Treatment %in% c("Silenced", "Control"))) %>%
filter(Time == "48h")
results_gene <- data.frame()
for (gene in unique(dat_gene$Gene))
{
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_gene, Gene == gene))
results_gene <- rbind(results_gene, data.frame(gene = gene, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
geneExp <- group_by(results_gene, gene) %>%
mutate(padj = p.adjust(pvalue, method = "fdr"))
geneExp <- dplyr::rename(geneExp, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
# plot all genes expression for silenced and control-mites, in a boxplot
boxplot <- list()
for (gene in unique(dat_gene$Gene))
{
table <- filter(dat_gene, Gene == gene)
N <- nrow(table)
geneExppadj <- filter(geneExp, Gene == gene)
Padjust <- formattable(as.double(geneExppadj[1,3], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Relative expression", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplot[[gene]] <- p
}
# plot all 11 genes in one figure
grid.arrange(boxplot$Anl, boxplot$clmd, boxplot$Chl, boxplot$CuP14, boxplot$CuP8, boxplot$Glut, boxplot$Gly, boxplot$HDD, boxplot$Prolin, boxplot$Sar, boxplot$Trans, boxplot$Twitch, nrow = 3, ncol = 4)
#lapply(boxplot, grid.arrange, nrow = 4, ncol = 3)
View(geneExp)
dat_virus <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/virus_in_silenced.csv")
dat_gene <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/Silencing_qPCR.csv")
dat_gene <- dat_gene %>%
filter((Treatment %in% c("Silenced", "Control"))) %>%
filter(Time == "48h")
results_gene <- data.frame()
for (gene in unique(dat_gene$Gene))
{
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_gene, Gene == gene))
results_gene <- rbind(results_gene, data.frame(gene = gene, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
geneExp <- group_by(results_gene, gene) %>%
mutate(padj = p.adjust(pvalue, method = "fdr"))
geneExp <- dplyr::rename(geneExp, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
geneExp
results_gene
View(results_gene)
dat_virus <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/virus_in_silenced.csv")
dat_gene <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/Silencing_qPCR.csv")
dat_gene <- dat_gene %>%
filter((Treatment %in% c("Silenced", "Control"))) %>%
filter(Time == "48h")
results_gene <- data.frame()
for (gene in unique(dat_gene$Gene))
{
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_gene, Gene == gene))
results_gene <- rbind(results_gene, data.frame(gene = gene, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
geneExp <- group_by(results_gene, gene) %>%
mutate(padj = p.adjust(pvalue, method = "fdr"))
geneExp <- dplyr::rename(geneExp, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
# plot all genes expression for silenced and control-mites, in a boxplot
boxplot <- list()
for (gene in unique(dat_gene$Gene))
{
table <- filter(dat_gene, Gene == gene)
N <- nrow(table)
geneExppadj <- filter(geneExp, Gene == gene)
Padjust <- formattable(as.double(geneExppadj[1,3], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Relative expression", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplot[[gene]] <- p
}
# plot all 11 genes in one figure
grid.arrange(boxplot$Anl, boxplot$clmd, boxplot$Chl, boxplot$CuP14, boxplot$CuP8, boxplot$Glut, boxplot$Gly, boxplot$HDD, boxplot$Prolin, boxplot$Sar, boxplot$Trans, boxplot$Twitch, nrow = 3, ncol = 4)
#lapply(boxplot, grid.arrange, nrow = 4, ncol = 3)
View(geneExp)
dat_virus <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/virus_in_silenced.csv")
dat_gene <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-knockdown/data/Silencing_qPCR.csv")
dat_gene <- dat_gene %>%
filter((Treatment %in% c("Silenced", "Control"))) %>%
filter(Time == "48h")
results_gene <- data.frame()
for (gene in unique(dat_gene$Gene))
{
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_gene, Gene == gene))
results_gene <- rbind(results_gene, data.frame(gene = gene, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
geneExp <- group_by(results_gene, gene) %>%
mutate(padj = p.adjust(pvalue, method = "fdr"))
View(geneExp)
geneExp <- dplyr::rename(geneExp, Gene = gene) #i changed the colname of "gene" to "Gene". for some reason this was disturbing in "filter" function later on.
# plot all genes expression for silenced and control-mites, in a boxplot
boxplot <- list()
for (gene in unique(dat_gene$Gene))
{
table <- filter(dat_gene, Gene == gene)
N <- nrow(table)
geneExppadj <- filter(geneExp, Gene == gene)
Padjust <- formattable(as.double(geneExppadj[1,3], digits = 2, format = "f"))
# Plot
p <- ggboxplot(table, x = "Treatment", y = "RQ",
main = paste(gene,",Padjust=",Padjust,", n=",N),
color = "Treatment", palette = c("#00AFBB", "#E7B800"),
order = c("Control", "Silenced"),
ylab = "Relative expression", xlab = "Treatment")  +
theme(legend.position = "none", text = element_text(size=8))
boxplot[[gene]] <- p
}
# plot all 11 genes in one figure
grid.arrange(boxplot$Anl, boxplot$clmd, boxplot$Chl, boxplot$CuP14, boxplot$CuP8, boxplot$Glut, boxplot$Gly, boxplot$HDD, boxplot$Prolin, boxplot$Sar, boxplot$Trans, boxplot$Twitch, nrow = 3, ncol = 4)
results_gene
results_gene
geneExp
geneExp <- results_gene %>%
group_by(gene) %>%
mutate(padj = p.adjust(pvalue, method = "fdr"))
geneExp
results_gene
geneExp
results_load <- data.frame()
for (gene in unique(dat_virus$Experiment))
for (virus in unique(dat_virus$Gene)) {
test <- wilcox.test(RQ ~ Treatment, alternative = "two.sided", data = filter(dat_virus, Experiment == gene & Gene == virus))
results_load <- rbind(results_load, data.frame(gene = gene, virus = virus, pvalue = test$p.value))
}
#We are testing the same knockdown gene several times, creating a multiple comparison problem, we fix that with a FDR correction per gene
viralLoad <- group_by(results_load, gene) %>% mutate(padj = p.adjust(pvalue, method = "fdr"))
View(viralLoad)
