#RIdeogram::ideogram(karyotype = varroa_karyotype)
ideogram(karyotype = varroa_karyotype, overlaid = less, colorset1)
#RIdeogram::ideogram(karyotype = varroa_karyotype)
ideogram(karyotype = varroa_karyotype, overlaid = less, colorset1 = c("#E52823","#E67D25","#E6D419"))
convertSVG("chromosome.svg", device = "png")
ideogram(karyotype = varroa_karyotype, overlaid = less, colorset1 = c("#4CE6DE","#2776E6","#273AE6"))
convertSVG("chromosome.svg", device = "png")
ideogram(karyotype = varroa_karyotype, overlaid = all, colorset1 = c("#4CE6DE","#2776E6","#273AE6"))
convertSVG("chromosome.svg", device = "png")
ideogram(karyotype = varroa_karyotype, overlaid = F1_males_00_w, colorset1 = c("#4CE6DE","#2776E6","#273AE6"))
convertSVG("chromosome.svg", device = "png")
ideogram(karyotype = varroa_karyotype, overlaid = F2_males_00_w, colorset1 = c("#4CE6DE","#2776E6","#273AE6"))
convertSVG("chromosome.svg", device = "png")
less %>% filter(Value == 3)
less %>% filter(Value == 3) %>% view()
less %>% filter(Value == 2) %>% view()
less %>% filter(Value == 1) %>% view()
library("tidyverse")
library("dplyr")
library("ggplot2")
library("ggpubr")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
library("vcfR")
library("data.table")
library("stringr")
library("janitor")
library("gmodels")
library("LinkageMapView") # for constructing the linkage map
library("RIdeogram")
#setwd("/Users/nuriteliash/Documents/GitHub/varroa-linkage-map/results/site position")
vcf <- read.vcfR("/Users/nuriteliash/Documents/GitHub/varroa-linkage-map/data/vcf_filter/Q40BIALLDP16HDP40mis.5Chr7/Q40BIALLDP16HDP40mis.5Chr7.recode.vcf", verbose = FALSE )
vcf
# extract the genotype for each site in each individual
gt <- extract.gt(vcf, element = "GT")
gt <- as.data.frame(t(gt)) %>%
rownames_to_column("sample")
#clean the ID names
gt$sample <- sub("_[^_]+$", "", gt$sample)
table <-  gt %>%
t() %>%
as.data.frame() %>%
row_to_names(row_number = 1)
# sites that lost heterozygosity in F2 males
table_400_F2 <- table %>% dplyr::select(starts_with("400")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>% # keep on hetero sites in F1 female
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>% # keep 0/0 sites in F1 male
dplyr::filter_at(vars(matches("_grnson")), all_vars(. == "0/0"))  %>% # keep 0/0 sites in F2 male
dplyr::select(c(ends_with("_grnson"))) %>%
rownames_to_column("site")
View(table_400_F2)
# sites that lost heterozygosity in F2 males
table_400_F2 <- table %>% dplyr::select(starts_with("400")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>% # keep on hetero sites in F1 female
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>% # keep 0/0 sites in F1 male
# dplyr::filter_at(vars(matches("_grnson")), all_vars(. == "0/0"))  %>% # keep 0/0 sites in F2 male
dplyr::select(c(ends_with("_grnson"))) %>%
rownames_to_column("site")
# sites that lost heterozygosity in F2 males
table_400_F2 <- table %>% dplyr::select(starts_with("400")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>% # keep on hetero sites in F1 female
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>% # keep 0/0 sites in F1 male
dplyr::select(c(ends_with("_grnson"))) %>%
rownames_to_column("site") %>%
drop_na()
varroa_sites <- separate(table_400_F2, site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","400_401a_grnson")) %>%
dplyr::rename("gt" = "400_401a_grnson") %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~1000))
View(varroa_sites)
varroa_sites <- separate(table_400_F2, site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","400_401a_grnson")) %>%
dplyr::rename("gt" = "400_401a_grnson") %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
# for varroa:
# make the karyotype table with chromosomes start and end position
varroa_karyotype <- tibble(Chr = c("NW_019211454.1", "NW_019211455.1", "NW_019211456.1", "NW_019211457.1", "NW_019211458.1", "NW_019211459.1", "NW_019211460.1"),
Start = 0,
End = c(76960006, 60513814,58583513,52932055,42024542,32556157,39431147),
) %>% separate(col=Chr, into=c("noting","Chr"), sep="_") %>%
dplyr::select(-"noting") %>% as.data.frame()
#RIdeogram::ideogram(karyotype = varroa_karyotype)
#ideogram(karyotype = varroa_karyotype, overlaid = less, colorset1 = c("#E52823","#E67D25","#E6D419"))
ideogram(karyotype = varroa_karyotype, overlaid = varroa_sites, colorset1 = c("#4CE6DE","#2776E6","#273AE6"))
convertSVG("chromosome.svg", device = "png")
#RIdeogram::ideogram(karyotype = varroa_karyotype)
#ideogram(karyotype = varroa_karyotype, overlaid = less, colorset1 = c("#E52823","#E67D25","#E6D419"))
ideogram(karyotype = varroa_karyotype, overlaid = varroa_sites, colorset1 = c("#DC0109","#273AE6"))
convertSVG("chromosome.svg", device = "png")
varroa_sites %>% count(gt == "0/1")
# sites that lost heterozygosity in F2 males
table_412_F2 <- table %>% dplyr::select(starts_with("412")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>% # keep on hetero sites in F1 female
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>% # keep 0/0 sites in F1 male
dplyr::select(c(ends_with("_grnson"))) %>%
rownames_to_column("site") %>%
drop_na()
View(table_412_F2)
View(table_400_F2)
varroa_sites <- separate(table_412_F2, site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","412_413a_grnson")) %>%
dplyr::rename("gt" = "412_413a_grnson") %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
#RIdeogram::ideogram(karyotype = varroa_karyotype)
#ideogram(karyotype = varroa_karyotype, overlaid = less, colorset1 = c("#E52823","#E67D25","#E6D419"))
ideogram(karyotype = varroa_karyotype, overlaid = varroa_sites, colorset1 = c("#DC0109","#273AE6"))
convertSVG("chromosome.svg", device = "png")
varroa_sites %>% count(gt == "0/1")
# sites that lost heterozygosity in F2 males
table_302_F2 <- table %>% dplyr::select(starts_with("302")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>% # keep on hetero sites in F1 female
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>% # keep 0/0 sites in F1 male
dplyr::select(c(ends_with("_grnson"))) %>%
rownames_to_column("site") %>%
drop_na()
varroa_sites <- separate(table_302_F2, site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","302_303b_grnson")) %>%
dplyr::rename("gt" = "302_303b_grnson") %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
302_303b_grnson %>% count(gt =="0/1")
varroa_sites %>% count(gt =="0/1")
#RIdeogram::ideogram(karyotype = varroa_karyotype)
#ideogram(karyotype = varroa_karyotype, overlaid = less, colorset1 = c("#E52823","#E67D25","#E6D419"))
ideogram(karyotype = varroa_karyotype, overlaid = varroa_sites, colorset1 = c("#DC0109","#273AE6"))
convertSVG("chromosome.svg", device = "png")
# sites that lost heterozygosity in F2 males
table_600_F2 <- table %>% dplyr::select(starts_with("600")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>% # keep on hetero sites in F1 female
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>% # keep 0/0 sites in F1 male
dplyr::select(c(ends_with("_grnson"))) %>%
rownames_to_column("site") %>%
drop_na()
varroa_sites <- separate(table_600_F2, site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","600_301b_grnson")) %>%
dplyr::rename("gt" = "600_301b_grnson") %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
varroa_sites <- separate(table_600_F2, site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","600_601a_grnson")) %>%
dplyr::rename("gt" = "600_601a_grnson") %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
varroa_sites %>% count(gt =="0/1")
#RIdeogram::ideogram(karyotype = varroa_karyotype)
#ideogram(karyotype = varroa_karyotype, overlaid = less, colorset1 = c("#E52823","#E67D25","#E6D419"))
ideogram(karyotype = varroa_karyotype, overlaid = varroa_sites, colorset1 = c("#DC0109","#273AE6"))
convertSVG("chromosome.svg", device = "png")
# define th weird families:
w_families = c("240", "400", "412", "46", "458", "426")
obs_F2 <- list()
for (fam in w_families) {
obs_F2[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>% # keep on hetero sites in F1 female
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>% # keep 0/0 sites in F1 male
dplyr::select(c(ends_with("_grnson"))) %>%
rownames_to_column("site") %>%
drop_na()
}
View(obs_F2)
# join all F1 males into one dataframe, and count the number of samples that lost heterozygosity in each site (values can get 1-6)
F2_males = obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
drop_na() %>%
dplyr::count(site, .drop = FALSE) %>%
dplyr::rename(Value = n) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","Value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>%
dplyr::rename(Value = n)
# join all F1 males into one dataframe, and count the number of samples that lost heterozygosity in each site (values can get 1-6)
F2_males = obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>%
dplyr::rename(Value = n) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","Value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) #i arbitrary add a value of 300,000, so the line would be visible on the mapping
View(F2_males)
ggplot(F2_males)
ggplot(F2_males, aes(fill=gt, y=Value, x=Chr)) +
geom_bar(position="fill", stat="identity", )
ggplot(F2_males, aes(fill=gt, y=Value, x=Chr))
ggplot(F2_males, aes(fill=Value, x=Chr))
ggplot(F2_males, aes(fill=Value, x=Value))
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE)
# join all F1 males into one dataframe, and count the number of samples that lost heterozygosity in each site (values can get 1-6)
F2_males = obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>% ggplot(fill = site, x = n)
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>% ggplot(fill = site, x = n)
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>% ggplot(fill = site, x = n) + dotchart()
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>% ggplot() + dotchart(fill = site, x = n)
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>% ggplot() + geom_dotplot()
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>% ggplot(aes(x=Value)) + geom_histogram(color="black", fill="white")
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>% ggplot(aes(x=n)) + geom_histogram(color="black", fill="white")
F2_males = obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE)
# define th weird families:
w_families = c("240", "400", "412", "46", "458", "426")
obs_F2 <- list()
for (fam in w_families) {
obs_F2[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>% # keep on hetero sites in F1 female
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>% # keep 0/0 sites in F1 male
dplyr::select(c(ends_with("_grnson"))) %>%
rownames_to_column("site") %>%
drop_na()
}
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>% view()
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
dplyr::count(site, .drop = FALSE) %>% view()
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>% view()
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
drop_na() %>% view()
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
drop_na() %>%
filter(value == "0/1") %>% view()
# join all F1 males into one dataframe, and count the number of samples that *kept* heterozygosity in each site (values can get 1-6)
F2_males_01 = obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
drop_na() %>%
filter(value == "0/1") %>%
dplyr::count(site, .drop = FALSE) %>%
dplyr::rename(Value = n) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","Value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) #i arbitrary add a value of 300,000, so the line would be visible on the mapping
View(F2_males_01)
# join all F1 males into one dataframe, and count the number of samples that *LOST* heterozygosity in each site (values can get 1-6)
F2_males_00 = obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
drop_na() %>%
filter(value == "0/0") %>%
dplyr::count(site, .drop = FALSE) %>%
dplyr::rename(Value = n) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","Value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) #i arbitrary add a value of 300,000, so the line would be visible on the mapping
View(F2_males_00)
# join all F1 males into one dataframe, and count the number of samples that *kept* heterozygosity in each site (values can get 1-6)
F2_males_01 = obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
drop_na() %>%
filter(value == "0/1") %>%
dplyr::count(site, .drop = FALSE) %>%
dplyr::rename(Value = n) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","Value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) #i arbitrary add a value of 300,000, so the line would be visible on the mapping
# join all F1 males into one dataframe, and count the number of samples that *LOST* heterozygosity in each site (values can get 1-6)
F2_males_00 = obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
drop_na() %>%
filter(value == "0/0") %>%
dplyr::count(site, .drop = FALSE) %>%
dplyr::rename(Value = n) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","Value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) #i arbitrary add a value of 300,000, so the line would be visible on the mapping
#RIdeogram::ideogram(karyotype = varroa_karyotype)
# for lost sites F2_males_00 in one plot:
ideogram(karyotype = varroa_karyotype, overlaid = F2_males_00, colorset1 = c("#E6D419","#DC0109"))
#RIdeogram::ideogram(karyotype = varroa_karyotype)
# for lost sites in one plot:
ideogram(karyotype = varroa_karyotype, overlaid = F2_males_00, colorset1 = c("#E6D419","#DC0109"))
convertSVG("chromosome.svg", device = "png")
# for kept sites in one plot:
ideogram(karyotype = varroa_karyotype, overlaid = F2_males_01, colorset1 = c("#4CE6DE","#273AE6"))
convertSVG("chromosome.svg", device = "png")
# keep all sites , to view on the same plot:
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
drop_na() %>% view()
# keep all sites , to view on the same plot:
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value == "0/0" | "0/1") %>%     view()
# keep all sites , to view on the same plot:
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value == c("0/0" | "0/1")) %>%     view()
# keep all sites , to view on the same plot:
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%    view()
# keep all sites , to view on the same plot:
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
mutate(Start = as.numeric(Start)) %>%   view()
# keep all sites , to view on the same plot:
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%  view()
# keep all sites , to view on the same plot:
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","Value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
# keep all sites , to view on the same plot:
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","Value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
# keep all sites , to view on the same plot:
obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
# keep all sites , to view on the same plot:
F2_all -> obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
# keep all sites , to view on the same plot:
F2_all = obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
# keep all sites , to view on the same plot:
F2_all <- obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
View(table_302_F2)
View(F2_males_00)
View(table_600_F2)
# keep all sites , to view on the same plot:
F2_all <- obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",gt)~1,
grepl("0/1",gt)~10))
# keep all sites , to view on the same plot:
F2_all <- obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",value)~1,
grepl("0/1",value)~10))
View(F2_all)
# keep all sites , to view on the same plot:
F2_all <- obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",value)~1,
grepl("0/1",value)~10)) %>%
select(c("Chr","Start", "End","Value"))
# for lost + kept in the same plot
ideogram(karyotype = varroa_karyotype, overlaid = F2_all, colorset1 = c("#DC0109","#273AE6"))
convertSVG("chromosome.svg", device = "png")
F2all %>% count(Value ==1)
F2_all %>% count(Value ==1)
F2_all %>% unique(Start) %>% count(Value ==1)
F2_all %>% unique("Start") %>% count(Value ==1)
F2_all %>% unique("Start")
F2_all %>% distinct("Start")
F2_all %>% distinct(Start)
F2_all %>% distinct(Start) %>% count(Value ==1)
F2_all %>% distinct(Start) %>% count(Value ==1)
F2_all %>% distinct(Start) %>% view()
F2_all %>% distinct(Start.keep_all = TRUE) %>% view()
F2_all %>% distinct(Start,.keep_all = TRUE) %>% view()
F2_all %>% distinct(Start,.keep_all = TRUE) %>% count( Value ==1) %>% view()
# keep all sites , to view on the same plot:
F2_all <- obs_F2 %>% reduce(full_join) %>%
tidyr::pivot_longer(-"site")  %>%
filter(value %in% c("0/0", "0/1")) %>%
separate(site, into = c("NW","Chr","Pos"), sep = '_') %>%
select(c("Chr","Pos","value")) %>%
dplyr::rename("Start" = "Pos") %>%
mutate(Start = as.numeric(Start)) %>%
dplyr::mutate("End" = Start + 300000) %>% #i arbitrary add a value of 300,000, so the line would be visible on the mapping
dplyr::mutate(Value=case_when(# i arbitrary add a "value" for each site, based on the genotype, so we can distinguish btw "0/0" and "0/1" sites
grepl("0/0",value)~1,
grepl("0/1",value)~10)) %>%
select(c("Chr","Start", "End","Value")) %>%
distinct(Start,.keep_all = TRUE) # we can decide to keep only unique sites
count(F2_all, Value ==1)
