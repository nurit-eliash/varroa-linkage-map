text = paste("sample:", sample,
", n:", total))) +
# geom_boxplot() +
geom_jitter(width=0.2, size=2) +
scale_color_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ggtitle('F2 offspring of F1 male (0/0) x female (0/1)') +
facet_grid(~sex)  +  guides(color = "none") +  geom_line(aes(median(freq))) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
ggplotly(p) %>%
layout(legend = list(orientation = "h", x = 0, y = -0.1),
title = list(text = paste0('F2 offspring of F1 male (0/0) x female (0/1), ',
'<br>',
paste0("site count= ", sum(df$count)))))
p = df %>% dplyr::filter(total>10) %>%
dplyr::filter(sex %in% c("female", "male")) %>%
ggplot(aes(x = gt, y = freq, colour = gt, shape = adult_sisters,
text = paste("sample:", sample,
", n:", total))) +
# geom_boxplot() +
geom_jitter(width=0.2, size=2) +
scale_color_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ggtitle('F2 offspring of F1 male (0/0) x female (0/1)') +
facet_grid(~sex)  +  guides(color = "none") +  geom_line(aes(median(freq))) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
ggplotly(p) %>%
layout(legend = list(orientation = "h", x = 0, y = -0.1),
title = list(text = paste0('F2 offspring of F1 male (0/0) x female (0/1), ',
'<br>',
paste0("site count= ", sum(df$count)))))
p
p = df %>% dplyr::filter(total>10) %>%
dplyr::filter(sex %in% c("female", "male")) %>%
ggplot(aes(x = gt, y = freq, colour = gt, shape = adult_sisters,
text = paste("sample:", sample,
", n:", total))) +
# geom_boxplot() +
geom_jitter(width=0.2, size=2) +
scale_color_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ggtitle('F2 offspring of F1 male (0/0) x female (0/1)') +
facet_grid(~sex)  +  guides(color = "none") +  geom_hline(yintercept=median, linetype="dashed",               color = "green", size=2) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
ggplotly(p) %>%
layout(legend = list(orientation = "h", x = 0, y = -0.1),
title = list(text = paste0('F2 offspring of F1 male (0/0) x female (0/1), ',
'<br>',
paste0("site count= ", sum(df$count)))))
median
p = df %>% dplyr::filter(total>10) %>%
dplyr::filter(sex %in% c("female", "male")) %>%
ggplot(aes(x = gt, y = freq, colour = gt, shape = adult_sisters,
text = paste("sample:", sample,
", n:", total))) +
# geom_boxplot() +
geom_jitter(width=0.2, size=2) +
scale_color_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ggtitle('F2 offspring of F1 male (0/0) x female (0/1)') +geom_hline(yintercept=median, linetype="dashed",               color = "green", size=2) +
facet_grid(~sex)  +  guides(color = "none") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
ggplotly(p) %>%
layout(legend = list(orientation = "h", x = 0, y = -0.1),
title = list(text = paste0('F2 offspring of F1 male (0/0) x female (0/1), ',
'<br>',
paste0("site count= ", sum(df$count)))))
p = df %>% dplyr::filter(total>10) %>%
dplyr::filter(sex %in% c("female", "male")) %>%
ggplot(aes(x = gt, y = freq, colour = gt, shape = adult_sisters,
text = paste("sample:", sample,
", n:", total))) +
# geom_boxplot() +
geom_jitter(width=0.2, size=2) +
scale_color_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ggtitle('F2 offspring of F1 male (0/0) x female (0/1)')  +
stat_summary(fun.y = median, fun.ymin = median, fun.ymax = median,
geom = "crossbar", width = 0.5)+
facet_grid(~sex)  +  guides(color = "none") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
p = df %>% dplyr::filter(total>10) %>%
dplyr::filter(sex %in% c("female", "male")) %>%
ggplot(aes(x = gt, y = freq, colour = gt, shape = adult_sisters,
text = paste("sample:", sample,
", n:", total))) +
# geom_boxplot() +
geom_jitter(width=0.2, size=2) +
scale_color_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ggtitle('F2 offspring of F1 male (0/0) x female (0/1)')  +
stat_summary(fun = median, fun.ymin = median, fun.ymax = median,
geom = "crossbar", width = 0.5)+
facet_grid(~sex)  +  guides(color = "none") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
ggplotly(p) %>%
layout(legend = list(orientation = "h", x = 0, y = -0.1),
title = list(text = paste0('F2 offspring of F1 male (0/0) x female (0/1), ',
'<br>',
paste0("site count= ", sum(df$count)))))
p
library("tidyverse")
library("dplyr")
library("ggplot2")
library("ggpubr")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
library("vcfR")
library("data.table")
library("stringr")
library("janitor")
library("gmodels")
vcf <- read.vcfR("/Users/nuriteliash/Documents/GitHub/linkage-map-BIGdata/Q40BIALLDP16HDP40mis.5Chr7.recode.vcf", verbose = FALSE )
library("tidyverse")
library("dplyr")
library("ggplot2")
library("ggpubr")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
library("vcfR")
library("data.table")
library("stringr")
library("janitor")
library("gmodels")
vcf <- read.vcfR("/Users/nuriteliash/Documents/GitHub/linkage-map-BIGdata/Q40BIALLDP16HDP40mis.5Chr7.recode.vcf", verbose = FALSE )
vcf <- read.vcfR("/Users/nuriteliash/Documents/GitHub/varroa-linkage-map/data/vcf_filter/Q40BIALLDP16HDP40mis.5Chr7/Q40BIALLDP16HDP40mis.5Chr7.recode.vcf", verbose = FALSE )
vcf
# extract the genotype for each site in each individual
gt <- extract.gt(vcf, element = "GT")
gt <- as.data.frame(t(gt)) %>%
rownames_to_column("sample")
View(gt)
# add additional info for each individual
gt_info <- gt %>%
mutate(fam = str_extract(sample, "[^_]+")) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat|fnd|sis", sample) ~ "female",
grepl( "_grn_",sample) ~ "ND")) %>%
mutate(generation = case_when(
grepl("fnd", sample) ~ "F0",
grepl("_dat_|sis|_son_", sample) ~ "F1",
grepl("grn", sample) ~ "F2")) %>%
mutate(fam_membership = case_when(
grepl("fnd", sample) ~ "Foundress_mother",
grepl("_dat_", sample) ~ "Daughter",
grepl("sis", sample) ~ "Second_daughter",
grepl("_son_", sample) ~ "Son",
grepl("grnson", sample) ~ "Grandson",
grepl("_grndat_", sample) ~ "Granddaughter",
grepl("_grn_", sample) ~ "Grandson_daughter")) %>%
dplyr::select(sample, fam, sex, generation, fam_membership, everything())
View(gt_info)
#clean the ID names
gt$sample <- sub("_[^_]+$", "", gt$sample)
View(gt)
# add additional info for each individual
gt_info <- gt %>%
mutate(fam = str_extract(sample, "[^_]+")) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat|fnd|sis", sample) ~ "female",
grepl( "_grn_",sample) ~ "ND")) %>%
mutate(generation = case_when(
grepl("fnd", sample) ~ "F0",
grepl("_dat_|sis|_son_", sample) ~ "F1",
grepl("grn", sample) ~ "F2")) %>%
mutate(fam_membership = case_when(
grepl("fnd", sample) ~ "Foundress_mother",
grepl("_dat_", sample) ~ "Daughter",
grepl("sis", sample) ~ "Second_daughter",
grepl("_son_", sample) ~ "Son",
grepl("grnson", sample) ~ "Grandson",
grepl("_grndat_", sample) ~ "Granddaughter",
grepl("_grn_", sample) ~ "Grandson_daughter")) %>%
dplyr::select(sample, fam, sex, generation, fam_membership, everything())
View(gt)
View(gt_info)
table <-  gt %>%
t() %>%
as.data.frame() %>%
row_to_names(row_number = 1)
View(table)
meta <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-linkage-map/data/meta_more.csv")
View(meta)
View(table)
# set the families
family = grep("fnd",gt$sample, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
# set the families
family = grep("fnd",gt$sample, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
obs <- list()
fam
View(table)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # filter for hetero sites in the foundress mite
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0"|"1/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
#  mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n)
}
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # filter for hetero sites in the foundress mite
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0|1/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
#  mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n)
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
# replace "NA" with zero value when gt doesn't exists
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1"))) # add all possible genotypes
View(obs)
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # filter for hetero sites in the foundress mite
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0|1/1")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
#  mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n)
}
View(obs)
table %>% dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # filter for hetero sites in the foundress mite
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0|1/1")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value)
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1"))
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% view()
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0|1/1")) %>%view()
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% view()
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% view()
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0"))
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%view()
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0" | .=="1/1")) %>% view()
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # filter for hetero sites in the foundress mite
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0" | .=="1/1")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
#  mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n)
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
View(observed)
obs$63
obs$"63"
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0" | .=="1/1")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>% view()
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0" | .=="1/1")) %>% view()
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0" | .=="1/1")) %>%
dplyr::select(c(ends_with("_son"))) %>% view()
remove(meta)
table %>% dplyr::select(starts_with("240")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # keep on hetero sites in foundress
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0" | .=="1/1")) %>% # keep only homo sites in son
dplyr::select(c(ends_with("_son"))) %>%
rownames_to_column("site") %>% view()
library("tidyverse")
library("dplyr")
library("ggplot2")
library("ggpubr")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
library("vcfR")
library("data.table")
library("stringr")
library("janitor")
library("gmodels")
library("LinkageMapView") # for constructing the linkage map
setwd("/Users/nuriteliash/Desktop/")
library("RIdeogram") # for visualizing the variant sites on the chromosomes
library("tidyverse")
library("plyr")
library("dplyr")
library("ggplot2")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
library("vcfR") # for extracting genotype data from a vcf file
library("data.table")
library("stringr")
library("janitor")
#library("PopGenome") # for computing the running mean, using the 'SlidingWindow' function. Feb2023 - problem with theR version
library("readr") # to read a delimited table - remove this and the PopGwnome if i dont use it at the end
library("runner") # to calculate running windows
library("Rcpp") # required for the runner package
knitr::opts_chunk$set(echo = TRUE)
# define a list to put all the data frames in
list <- list()
for (fam in family) {
list[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>% rownames_to_column("site")
}
# join all grandkids of 26 families together
F2all <- reduce(list, full_join, by = "site")
# separate to male and females of the F2
F2male <- F2all %>%
dplyr::select(dplyr::contains(c("site","son"))) %>% mutate_all(as.character) %>%
mutate("count0/0" = rowSums(F2male[-1] == "0/0", na.rm=TRUE)) %>%
mutate("count0/1" = rowSums(F2male[-1] == "0/1", na.rm=TRUE)) %>%
mutate("count1/1" = rowSums(F2male[-1] == "1/1", na.rm=TRUE)) %>%
separate(col="site", into=c("noting","Chr" ,"Start"), sep="_") %>%
mutate(Start = as.double(Start)) %>%
mutate("End"=Start+3) %>%
dplyr::select(c("Chr","Start","End","count0/0","count0/1","count1/1"))
# separate to male and females of the F2
F2male <- F2all %>%
dplyr::select(dplyr::contains(c("site","son"))) %>% mutate_all(as.character) %>%
mutate("count0/0" = rowSums(F2male[-1] == "0/0", na.rm=TRUE)) %>%
mutate("count0/1" = rowSums(F2male[-1] == "0/1", na.rm=TRUE)) %>%
mutate("count1/1" = rowSums(F2male[-1] == "1/1", na.rm=TRUE)) %>%
separate(col="site", into=c("noting","Chr" ,"Start"), sep="_") %>%
mutate(Start = as.double(Start)) %>%
mutate("End"=Start+3) %>%
dplyr::select(c("Chr","Start","End","count0/0","count0/1","count1/1"))
F2male <- F2all %>%
dplyr::select(dplyr::contains(c("site","son"))) %>% mutate_all(as.character) %>%
mutate("count0/0" = rowSums(F2male[-1] == "0/0", na.rm=TRUE)) %>%
mutate("count0/1" = rowSums(F2male[-1] == "0/1", na.rm=TRUE)) %>%
mutate("count1/1" = rowSums(F2male[-1] == "1/1", na.rm=TRUE)) %>%
separate(col="site", into=c("noting","Chr" ,"Start"), sep="_") %>%
mutate(Start = as.double(Start)) %>%
mutate("End"=Start+3) %>%
dplyr::select(c("Chr","Start","End","count0/0","count0/1","count1/1"))
View(F2all)
tibble(Chr = c("NW_019211454.1", "NW_019211455.1", "NW_019211456.1", "NW_019211457.1", "NW_019211458.1", "NW_019211459.1", "NW_019211460.1"),
Start = 0,
End = c(76960006, 60513814,58583513,52932055,42024542,32556157,39431147),
) %>% separate(col=Chr, into=c("noting","Chr"), sep="_") %>%
dplyr::select(-"noting")
F2male <- F2all %>%
dplyr::select(dplyr::contains(c("site","son"))) %>% mutate_all(as.character)
F2male %>%
mutate("count0/0" = rowSums(F2male[-1] == "0/0", na.rm=TRUE)) %>%
mutate("count0/1" = rowSums(F2male[-1] == "0/1", na.rm=TRUE)) %>%
mutate("count1/1" = rowSums(F2male[-1] == "1/1", na.rm=TRUE)) %>%
separate(col="site", into=c("noting","Chr" ,"Start"), sep="_") %>%
mutate(Start = as.double(Start)) %>%
mutate("End"=Start+3) %>%
dplyr::select(c("Chr","Start","End","count0/0","count0/1","count1/1"))
F2male %>%
mutate("count0/0" = rowSums(F2male[-1] == "0/0", na.rm=TRUE)) %>%
mutate("count0/1" = rowSums(F2male[-1] == "0/1", na.rm=TRUE)) %>%
mutate("count1/1" = rowSums(F2male[-1] == "1/1", na.rm=TRUE)) %>%
separate(col="site", into=c("noting","Chr" ,"Start"), sep="_") %>%
mutate(Start = as.double(Start)) %>%
mutate("End"=Start+3) %>%
dplyr::select(c("Chr","Start","End","count0/0","count0/1","count1/1")) %>% view()
F2male <- F2male %>%
mutate("count0/0" = rowSums(F2male[-1] == "0/0", na.rm=TRUE)) %>%
mutate("count0/1" = rowSums(F2male[-1] == "0/1", na.rm=TRUE)) %>%
mutate("count1/1" = rowSums(F2male[-1] == "1/1", na.rm=TRUE)) %>%
separate(col="site", into=c("noting","Chr" ,"Start"), sep="_") %>%
mutate(Start = as.double(Start)) %>%
mutate("End"=Start+3) %>%
dplyr::select(c("Chr","Start","End","count0/0","count0/1","count1/1")) %>% view()
# make the karyotype table with chromosomes start and end position
karyotype <- tibble(Chr = c("NW_019211454.1", "NW_019211455.1", "NW_019211456.1", "NW_019211457.1", "NW_019211458.1", "NW_019211459.1", "NW_019211460.1"),
Start = 0,
End = c(76960006, 60513814,58583513,52932055,42024542,32556157,39431147),
) %>% separate(col=Chr, into=c("noting","Chr"), sep="_") %>%
dplyr::select(-"noting")
View(karyotype)
sites <- F2male %>%
dplyr::select(c("Chr","Start","End","count0/1")) %>%
dplyr::rename("Value" = "count0/1")
View(sites)
View(F2male)
View(F2male)
F2male <- F2all %>%
dplyr::select(dplyr::contains(c("site","son"))) %>% mutate_all(as.character)
View(F2male)
View(sites)
#ideogram(karyotype = karyotype)
ideogram(karyotype = karyotype, overlaid = sites)
F2male <- F2male %>%
mutate("count0/0" = rowSums(F2male[-1] == "0/0", na.rm=TRUE)) %>%
mutate("count0/1" = rowSums(F2male[-1] == "0/1", na.rm=TRUE)) %>%
mutate("count1/1" = rowSums(F2male[-1] == "1/1", na.rm=TRUE)) %>%
separate(col="site", into=c("noting","Chr" ,"Start"), sep="_") %>%
mutate(Start = as.double(Start)) %>%
mutate("End"=Start+3) %>%
dplyr::select(c("Chr","Start","End","count0/0","count0/1","count1/1"))
# make the karyotype table with chromosomes start and end position
karyotype <- tibble(Chr = c("NW_019211454.1", "NW_019211455.1", "NW_019211456.1", "NW_019211457.1", "NW_019211458.1", "NW_019211459.1", "NW_019211460.1"),
Start = 0,
End = c(76960006, 60513814,58583513,52932055,42024542,32556157,39431147),
) %>% separate(col=Chr, into=c("noting","Chr"), sep="_") %>%
dplyr::select(-"noting")
sites <- F2male %>%
dplyr::select(c("Chr","Start","End","count0/1")) %>%
dplyr::rename("Value" = "count0/1")
#ideogram(karyotype = karyotype)
ideogram(karyotype = karyotype, overlaid = sites)
ideogram(karyotype = karyotype)
ideogram(karyotype = karyotype, overlaid = sites)
# load data
data(human_karyotype, package="RIdeogram")
data(gene_density, package="RIdeogram")
data(Random_RNAs_500, package="RIdeogram")
head(human_karyotype)
gene_density <- GFFex(input = "gencode.v32.annotation.gff3.gz", karyotype = "human_karyotype.txt", feature = "gene", window = 1000000)
human_karyotype <- read.table("karyotype.txt", sep = "\t", header = T, stringsAsFactors = F)
View(human_karyotype)
gene_density <- GFFex(input = "gencode.v32.annotation.gff3.gz", karyotype = "human_karyotype", feature = "gene", window = 1000000)
ideogram(karyotype = karyotype)
karyotype
ideogram(karyotype = karyotype, overlaid = sites)
View(human_karyotype)
View(karyotype)
ideogram(karyotype = karyotype)
# make the karyotype table with chromosomes start and end position
varroa_karyotype <- tibble(Chr = c("NW_019211454.1", "NW_019211455.1", "NW_019211456.1", "NW_019211457.1", "NW_019211458.1", "NW_019211459.1", "NW_019211460.1"),
Start = 0,
End = c(76960006, 60513814,58583513,52932055,42024542,32556157,39431147),
) %>% separate(col=Chr, into=c("noting","Chr"), sep="_") %>%
dplyr::select(-"noting")
ideogram(karyotype = varroa_karyotype)
ideogram(karyotype = varroa_karyotype)
RIdeogram::ideogram(karyotype = varroa_karyotype)
RIdeogram::ideogram(karyotype = varroa_karyotype)
ideogram(karyotype = karyotype, overlaid = sites)
varroa_karyotype
View(sites)
library("RIdeogram") # for visualizing the variant sites on the chromosomes
library("tidyverse")
library("plyr")
library("dplyr")
library("ggplot2")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
library("vcfR") # for extracting genotype data from a vcf file
library("data.table")
library("stringr")
library("janitor")
library("PopGenome") # for computing the running mean, using the 'SlidingWindow' function
ideogram(karyotype = varroa_karyotype)
