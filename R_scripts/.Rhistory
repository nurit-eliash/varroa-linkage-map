theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_nymph_pooled <- ggplot(filter(together, sex=="Nymph"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (1/1) x female (1/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Nymph"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_egg_pooled <- ggplot(filter(together, sex=="Egg"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (1/1) x female (1/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Egg"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_male_pooled, p_egg_pooled, p_nymph_pooled, ncol = 3)
together
observed
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/0")) %>% # force F0 female to be homo, like her son
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "1/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(count = n)
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>%
replace(is.na(.),0) %>% # replace "NA" with zero value when gt doesn't exists
group_by(sample) %>%
mutate(total = as.numeric(sum(count))) %>%
mutate(freq=count/total) %>%
left_join(meta, by="sample")
p_male_pooled <- ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (1/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_nymph_pooled <- ggplot(filter(together, sex=="Nymph"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (1/1) x female (1/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Nymph"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_egg_pooled <- ggplot(filter(together, sex=="Egg"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (1/1) x female (1/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Egg"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_male_pooled, p_egg_pooled, p_nymph_pooled, ncol = 3)
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "1/1")) %>% # force F0 female to be homo, like her son
dplyr::filter_at(vars(matches("_son")), all_vars(. == "1/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/0")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(count = n)
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>%
replace(is.na(.),0) %>% # replace "NA" with zero value when gt doesn't exists
group_by(sample) %>%
mutate(total = as.numeric(sum(count))) %>%
mutate(freq=count/total) %>%
left_join(meta, by="sample")
p_male_pooled <- ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_nymph_pooled <- ggplot(filter(together, sex=="Nymph"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (1/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Nymph"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_egg_pooled <- ggplot(filter(together, sex=="Egg"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (1/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Egg"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_male_pooled, p_egg_pooled, p_nymph_pooled, ncol = 3)
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/0")) %>% # force F0 female to be homo, like her son
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(count = n)
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>%
replace(is.na(.),0) %>% # replace "NA" with zero value when gt doesn't exists
group_by(sample) %>%
mutate(total = as.numeric(sum(count))) %>%
mutate(freq=count/total) %>%
left_join(meta, by="sample")
p_male_pooled <- ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/0) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_nymph_pooled <- ggplot(filter(together, sex=="Nymph"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (0/0) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Nymph"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_egg_pooled <- ggplot(filter(together, sex=="Egg"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (0/0) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Egg"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_male_pooled, p_egg_pooled, p_nymph_pooled, ncol = 3)
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "1/1")) %>% # force F0 female to be homo, like her son
dplyr::filter_at(vars(matches("_son")), all_vars(. == "1/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(count = n)
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>%
replace(is.na(.),0) %>% # replace "NA" with zero value when gt doesn't exists
group_by(sample) %>%
mutate(total = as.numeric(sum(count))) %>%
mutate(freq=count/total) %>%
left_join(meta, by="sample")
p_male_pooled <- ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_nymph_pooled <- ggplot(filter(together, sex=="Nymph"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Nymph"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_egg_pooled <- ggplot(filter(together, sex=="Egg"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Egg"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_male_pooled, p_egg_pooled, p_nymph_pooled, ncol = 3)
ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
facet_wrap(~sample)
filter(together, gt == "0/1")
ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
geom_text(data = filter(together, gt == "0/1"), aes(y=freq, x=adult_sisters, label=total), vjust = 0) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
facet_wrap(~sample)
ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
geom_text(data = filter(together, gt == "0/1"|sex=="male"), aes(y=freq, x=adult_sisters, label=total), vjust = 0) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
facet_wrap(~sample)
ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
geom_text(data = filter(together, gt == "0/1" & sex=="male"), aes(y=freq, x=adult_sisters, label=total), vjust = 0) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
facet_wrap(~sample)
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # force F0 female to be homo, like her son
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/0")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(count = n)
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>%
replace(is.na(.),0) %>% # replace "NA" with zero value when gt doesn't exists
group_by(sample) %>%
mutate(total = as.numeric(sum(count))) %>%
mutate(freq=count/total) %>%
left_join(meta, by="sample")
p_male_pooled <- ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_nymph_pooled <- ggplot(filter(together, sex=="Nymph"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Nymph"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_egg_pooled <- ggplot(filter(together, sex=="Egg"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Egg"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_male_pooled, p_egg_pooled, p_nymph_pooled, ncol = 3)
together
ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
geom_text(data = filter(together, gt == "0/1" & sex=="male"), aes(y=freq, x=adult_sisters, label=total), vjust = 0) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
facet_wrap(~sample)
together %>%
filter(sex=="male") %>%
filter(adult_sisters == "with adult sister") %>%
ggplot( aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
geom_text(data = filter(together, gt == "0/1" & sex=="male"), aes(y=freq, x=adult_sisters, label=total), vjust = 0) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
facet_wrap(~sample)
males_with_sisters = together %>%
filter(sex=="male") %>%
filter(adult_sisters == "with adult sister")
males_with_sisters
ggplot(males_with_sisters, aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(males_with_sisters, sex=="male"),gt == "0/1")$count))) +
geom_text(data = filter(together, gt == "0/1" & sex=="male"), aes(y=freq, x=adult_sisters, label=total), vjust = 0) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4")) +
facet_wrap(~sample)
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # force F0 female to be homo, like her son
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>% mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female")) %>%
group_by(sample) %>%
replace(is.na(.), 0) %>%
mutate(total = as.numeric(sum(obs)))
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # force F0 female to be homo, like her son
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "1/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(count = n)
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>%
replace(is.na(.),0) %>% # replace "NA" with zero value when gt doesn't exists
group_by(sample) %>%
mutate(total = as.numeric(sum(count))) %>%
mutate(freq=count/total) %>%
left_join(meta, by="sample")
p_male_pooled <- ggplot(filter(together, sex=="male"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="male"),gt == "0/1")$count))) +
#scale_x_discrete("adult_sisters", labels = c("with","without")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_nymph_pooled <- ggplot(filter(together, sex=="Nymph"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Nymph"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_egg_pooled <- ggplot(filter(together, sex=="Egg"), aes(fill=gt, y=freq, x=adult_sisters)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Nymphs of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", sum(dplyr::filter(filter(together, sex=="Egg"),gt == "0/1")$count))) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_male_pooled, p_egg_pooled, p_nymph_pooled, ncol = 3)
males_with_sisters = together %>%
filter(sex=="male") %>%
filter(adult_sisters == "with adult sister")
males_with_sisters
