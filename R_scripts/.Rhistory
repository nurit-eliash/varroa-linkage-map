labs(title = "Varroa mite",
subtitle = "p-value" = wil_var$p.value) +
# plot heterozygosity proportion, in each sex
p_var <- ggplot(ind_het_sex) +
geom_boxplot(aes(x = sex, y = het_prop, fill = sex)) + scale_y_continuous() +
theme_classic() +
labs(title = "Varroa mite",
subtitle = wil_var$p.value) +
ylab("Proportion of heterozygotic sites")
# plot heterozygosity proportion, in each sex
p_var <- ggplot(ind_het_sex) +
geom_boxplot(aes(x = sex, y = het_prop, fill = sex)) + scale_y_continuous() +
theme_classic() +
labs(title = "Varroa mite",
subtitle = paste("p-value=") wil_var$p.value) +
# plot heterozygosity proportion, in each sex
p_var <- ggplot(ind_het_sex) +
geom_boxplot(aes(x = sex, y = het_prop, fill = sex)) + scale_y_continuous() +
theme_classic() +
labs(title = "Varroa mite",
subtitle = paste("p-value=",  wil_var$p.value)) +
ylab("Proportion of heterozygotic sites")
p_var
# plot heterozygocity proportion, in each sex
p_bee <- ggplot(ind_het_bee) +
geom_boxplot(aes(x = sex, y = het_prop, fill = sex)) + scale_y_continuous() +
theme_classic() +
labs(title = "Varroa mite",
subtitle = paste("p-value=",  wil_bee$p.value)) +
ylab("Proportion of heterozygotic sites")
grid.arrange(top= grid::textGrob("Proportion of heterozygotic sites in males and females", gp=grid::gpar(fontsize=20)), p_bee, p_var, nrow = 1)
# plot heterozygocity proportion, in each sex
p_bee <- ggplot(ind_het_bee) +
geom_boxplot(aes(x = sex, y = het_prop, fill = sex)) + scale_y_continuous() +
theme_classic() +
labs(title = "Honeybee",
subtitle = paste("p-value=",  wil_bee$p.value)) +
ylab("Proportion of heterozygotic sites")
grid.arrange(top= grid::textGrob("Proportion of heterozygotic sites in males and females", gp=grid::gpar(fontsize=20)), p_bee, p_var, nrow = 1)
grid.arrange(top= grid::textGrob("Proportion of heterozygotic sites in males and females", gp=grid::gpar(fontsize=20)), p_bee, p_var, nrow = 1)
wil_var
library("tidyverse")
library("plyr")
library("dplyr")
library("ggplot2")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
library("vcfR") # for extracting genotype data from a vcf file
library("data.table")
library("stringr")
library("janitor")
knitr::opts_chunk$set(echo = TRUE)
vcf <- read.vcfR("/Users/nuriteliash/Documents/GitHub/varroa-linkage-map/data/vcf_filter/Q40BIALLDP16HDP40mis.5Chr7/Q40BIALLDP16HDP40mis.5Chr7.recode.vcf", verbose = FALSE )
vcf
# extract the genotype for each site in each individual
gt <- extract.gt(vcf, element = "GT")
gt <- as.data.frame(t(gt)) %>%
rownames_to_column("ID")
#clean the ID names
gt$ID <- sub("_[^_]+$", "", gt$ID)
df  <- setNames(data.frame(t(gt[,-1])), gt[,1]) %>% rownames_to_column("site")
# make a vector of all 30 families
families = stringr::str_extract(gt$ID, "[^_]+") %>% unique()
# make an empty list
sites = list()
for (fam in families) {
sites[[fam]] <- df %>%
dplyr::select(starts_with(c("site",fam))) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("fnd")), all_vars(. == "0/0"))
}
# make a data frame of all sites from all families
InfoSites_00_01 <- reduce(sites, bind_rows) %>% as.data.frame() %>% select(site) %>% distinct()
InfoSites_00_01 <- separate(InfoSites_00_01, site, into = c("NW","Chr","Pos"), sep = '_')
InfoSites_00_01$CHR <- paste(InfoSites_00_01$NW, InfoSites_00_01$Chr, sep = "_")
InfoSites_00_01 <- InfoSites_00_01 %>% select(c("CHR", "Pos"))
head(InfoSites_00_01)
df  <- setNames(data.frame(t(gt[,-1])), gt[,1]) %>% rownames_to_column("site")
# make a vector of all 30 families
families = stringr::str_extract(gt$ID, "[^_]+") %>% unique()
# make an empty list
sites = list()
for (fam in families) {
sites[[fam]] <- df %>%
dplyr::select(starts_with(c("site",fam))) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "1/1")) %>%
dplyr::filter_at(vars(matches("fnd")), all_vars(. == "1/1"))
}
# make a data frame of all sites from all families
InfoSites_11_01 <- reduce(sites, bind_rows) %>% as.data.frame() %>% select(site) %>% distinct()
# make a data frame of all sites from all families
InfoSites_11_01 <- reduce(sites, bind_rows) %>% as.data.frame() %>% select(site) %>% distinct()
InfoSites_11_01 <- separate(InfoSites_11_01, site, into = c("NW","Chr","Pos"), sep = '_')
InfoSites_11_01$CHR <- paste(InfoSites_11_01$NW, InfoSites_11_01$Chr, sep = "_")
InfoSites_11_01 <- InfoSites_11_01 %>% select(c("CHR", "Pos"))
head(InfoSites_11_01)
table <- gt %>%
t() %>%
as.data.frame() %>%
row_to_names(row_number = 1)
# dplyr::select(contains(c("son", "dat", "fnd"))) # keep only adults of F0, F1 and F2
# set chromosome variable
chromosomes = c("NW_019211454.1","NW_019211455.1","NW_019211456.1", "NW_019211457.1","NW_019211458.1","NW_019211459.1","NW_019211460.1")
# define a list to put all the data frames in
chr_list <- list()
# make a list with dataframes - each containing 1 chromosome
for (chr in chromosomes) {
chr_list[[chr]] <- table %>%
rownames_to_column("site") %>%
dplyr::filter(stringr::str_detect(site,chr))
}
# set a vector of all 30 families:
family = str_extract(gt$ID, "[^_]+") %>% unique()
# or, include only families with at least one adult F2
#family = grep("grndat|grnson",gt$ID, value=TRUE) %>%
#  str_extract("[^_]+")  %>%
#  unique()
# make a function to apply:
fun <- function(df) {
df %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/0")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
# make an empty list
obs <- list()
# apply the function for each of the chromosome, per family
for (fam in family) {
obs[[fam]] <- lapply(chr_list, fun)
}
# bind all families together, to a final data frame containing all observed counts
#observed <- do.call("rbind", obs)
chr_length = tibble(Chr = c("NW_019211454.1", "NW_019211455.1", "NW_019211456.1", "NW_019211457.1", "NW_019211458.1", "NW_019211459.1", "NW_019211460.1"),
bp = c(76960006, 60513814,58583513,52932055,42024542,32556157,39431147))
# calculate recombination freq for each male and female sample
example <- as.data.frame(obs$`133`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
# same
example <-
obs[[fam]][[chr]] %>% as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp) %>% view()
# make a function to loop over all families, is each chromosome
func_recom <- function(df) {
df %>%
as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
}
recomb_freq <- list()
# apply the function for each element in the large list (list of lists) of the chromosome, per family
for (chr in chromosomes) {
for (fam in family) {
recomb_freq[[chr]][[fam]] <- func_recom(obs[[fam]][[chr]]) } }
obs$63
obs$63
View(obs)
table %>%
rownames_to_column("site") %>%
dplyr::filter(stringr::str_detect(site,"NW_019211454.1")) %>%
dplyr::select(starts_with(c("site", "240"))) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/0")) %>% view()
chr_length = tibble(Chr = c("NW_019211454.1", "NW_019211455.1", "NW_019211456.1", "NW_019211457.1", "NW_019211458.1", "NW_019211459.1", "NW_019211460.1"),
bp = c(76960006, 60513814,58583513,52932055,42024542,32556157,39431147))
# calculate recombination freq for each male and female sample
example <- as.data.frame(obs$`133`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
example
View(example)
obs[[fam]][[chr]] %>% as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp) %>% view()
obs[[fam]][[chr]] %>% as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs)
# same
example <-
obs[[fam]][[chr]] %>% as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>% view()
# make a function to loop over all families, is each chromosome
func_recom <- function(df) {
df %>%
as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
}
recomb_freq <- list()
# apply the function for each element in the large list (list of lists) of the chromosome, per family
for (chr in chromosomes) {
for (fam in family) {
recomb_freq[[chr]][[fam]] <- func_recom(obs[[fam]][[chr]]) } }
# same
example <-
obs[[fam]][[chr]] %>% as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>% view()
fam
chr
# calculate recombination freq for each male and female sample
example <- as.data.frame(obs$`133`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
fam
chr
# calculate recombination freq for each male and female sample
example <- as.data.frame(obs$`596`$NW_019211454.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
# calculate recombination freq for each male and female sample
example <- as.data.frame(obs$`133`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
chr
Chr
View(example)
# same
example <-
obs[[fam]][[chr]] %>% as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>% view()
# calculate recombination freq for each male and female sample
example <- as.data.frame(obs$`133`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
View(table)
as.data.frame(obs$`133`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr")
as.data.frame(obs$`133`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+"))
# same
#example <-
obs[[fam]][[chr]] %>% as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>% view()
# same
#example <-
obs[[fam]][[chr]] %>% as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>% view()
# another example
as.data.frame(obs$`596`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
# another example
as.data.frame(obs$`240`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
as.data.frame(obs$`240`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs)
# another example
as.data.frame(obs$`240`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>% view()
# another example
as.data.frame(obs$`63`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>% view()
# another example
as.data.frame(obs$`63`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%view()
genotypes = c(`0/0`,`1/1`,`0/1`)
genotypes = c("0/0","1/1","0/1")
genotypes
# as not all samples have counts in all genotypes, i force all three genotypes
genotypes = tible(gt = c("0/0","1/1","0/1"))
# as not all samples have counts in all genotypes, i force all three genotypes
genotypes = data_frame(gt = c("0/0","1/1","0/1"))
genotypes
# as not all samples have counts in all genotypes, i force all three genotypes
genotypes = tibble(gt = c("0/0","1/1","0/1"))
View(genotypes)
# another example
as.data.frame(obs$`110`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>% view()
# another example
as.data.frame(obs$`110`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>% view()
# another example
as.data.frame(obs$`63`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>% view()
# calculate recombination freq for each male and female sample
example <- as.data.frame(obs$`133`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
# another example
as.data.frame(obs$`63`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>% view()
# another example
as.data.frame(obs$`63`$NW_019211457.1) %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = "NW_019211457.1") %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = dplyr::case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
# make a function to loop over all families, is each chromosome
func_recom <- function(df) {
df %>%
as.data.frame() %>%
mutate(sum_pairs = total*(total-1)/2) %>%
mutate(Chr = chr) %>%
left_join(chr_length, by = "Chr") %>%
mutate(sex = replace_na(sex, "female")) %>% # assume all F2 nymphs are females
mutate(fam = str_extract(sample, "[^_]+")) %>%
pivot_wider(names_from = gt, values_from = obs) %>%
mutate(recomb_pairs = dplyr::case_when(sex == "female" ~ `0/0` * `0/1`,
sex == "male" ~ (`0/0`+`1/1`) * `0/1`)) %>%
mutate(freq = recomb_pairs/sum_pairs) %>%
mutate(freq_cM_bp = freq/bp)
}
recomb_freq <- list()
# apply the function for each element in the large list (list of lists) of the chromosome, per family
for (chr in chromosomes) {
for (fam in family) {
recomb_freq[[chr]][[fam]] <- func_recom(obs[[fam]][[chr]]) } }
install.packages("DescTools")
