mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male")
df_fem <- rbind(x, y) %>%
dplyr::filter(sex == "female")
p_male_pooled <- ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_female_pooled <- ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_female_pooled, p_male_pooled, ncol = 2)
# plot each individual:
ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
ylab("Proportion of F2 genotype") +
labs(title = "F2 male genotype. F1 Cross: male (0/1) x female (0/0)", fill = "Genotype:") +
geom_text(data = df_male %>% filter(gt == "1/1") %>% filter(type == "Observed"), aes(x = 4, y = 0.8, label = total), inherit.aes = FALSE) +
facet_wrap(~ sample) +
theme_classic()+
theme(legend.position = "bottom", axis.title.x = element_blank(), axis.text.x = element_text(size=8, angle = 45,hjust = 1)) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
ylab("Proportion of F2 genotype") +
labs(title = "F2 female genotype. F1 Cross: male (0/1) x female (0/0)", fill = "Genotype:") +
geom_text(data = df_fem %>% filter(gt == "1/1") %>% filter(type == "Observed"), aes(x = 4, y = 0.8, label = total), inherit.aes = FALSE) +
facet_wrap(~ sample) +
theme_classic()+
theme(legend.position = "bottom", axis.title.x = element_blank(), axis.text.x = element_text(size=8, angle = 45,hjust = 1)) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0.5,0.5,0))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(1,0,0))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0.5,0.5,0))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(1,0,0))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex))%>% mutate(gt = as.character(gt))
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- together %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
right_join(mendel, by = c("gt", "sex")) %>%
mutate(exp = total*prop)
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- together %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
right_join(mendel, by = c("gt", "sex")) %>%
mutate(exp = total*prop)
```{r}
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male")
df_fem <- rbind(x, y) %>%
dplyr::filter(sex == "female")
p_male_pooled <- ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_female_pooled <- ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (0/1) x female (0/0)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_female_pooled, p_male_pooled, ncol = 2)
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Females of F1 male (1/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_fem, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
ylab("Proportion of F2 genotype") +
labs(title = "F2 female genotype. F1 Cross: male (0/1) x female (0/0)", fill = "Genotype:") +
geom_text(data = df_fem %>% filter(gt == "1/1") %>% filter(type == "Observed"), aes(x = 4, y = 0.8, label = total), inherit.aes = FALSE) +
facet_wrap(~ sample) +
theme_classic()+
theme(legend.position = "bottom", axis.title.x = element_blank(), axis.text.x = element_text(size=8, angle = 45,hjust = 1)) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Females of F1 male (1/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_fem, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
# set the families (include only families with at least one adult F2)
family = grep("grndat|grnson",gt$ID, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "1/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>% mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female")) %>%
group_by(sample) %>%
replace(is.na(.), 0) %>%
mutate(total = as.numeric(sum(obs)))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0,0.5,0.5))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(0,0,1))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex))%>% mutate(gt = as.character(gt))
# mutate(type = "exp")
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- together %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
right_join(mendel, by = c("gt", "sex")) %>%
mutate(exp = total*prop)
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male")
df_fem <- rbind(x, y) %>%
dplyr::filter(sex == "female")
p_male_pooled <- ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (1/1)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_female_pooled <- ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (0/1) x female (1/1)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_female_pooled, p_male_pooled, ncol = 2)
# plot each individual:
ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (1/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_male, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Females of F1 male (0/1) x female (1/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_fem, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
# set the families (include only families with at least one adult F2)
family = grep("grndat|grnson",gt$ID, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>% mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female")) %>%
group_by(sample) %>%
replace(is.na(.), 0) %>%
mutate(total = as.numeric(sum(obs)))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0.25,0.5,0.25))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(0.5,0,0.5))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex))%>% mutate(gt = as.character(gt))
# mutate(type = "exp")
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- together %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
right_join(mendel, by = c("gt", "sex")) %>%
mutate(exp = total*prop)
# set the families (include only families with at least one adult F2)
family = grep("grndat|grnson",gt$ID, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>% mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female")) %>%
group_by(sample) %>%
replace(is.na(.), 0) %>%
mutate(total = as.numeric(sum(obs)))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0.25,0.5,0.25))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(0.5,0,0.5))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex))%>% mutate(gt = as.character(gt))
# mutate(type = "exp")
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- together %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
right_join(mendel, by = c("gt", "sex")) %>%
mutate(exp = total*prop)
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male")
df_fem <- rbind(x, y) %>%
dplyr::filter(sex == "female")
p_male_pooled <- ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (1/1)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_female_pooled <- ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (0/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_female_pooled, p_male_pooled, ncol = 2)
# plot each individual:
ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_male, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Females of F1 male (0/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_fem, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
# set the families (include only families with at least one adult F2)
family = grep("grndat|grnson",gt$ID, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>% mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female")) %>%
group_by(sample) %>%
replace(is.na(.), 0) %>%
mutate(total = as.numeric(sum(obs)))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0.25,0.5,0.25))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(0.5,0,0.5))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex))%>% mutate(gt = as.character(gt))
# mutate(type = "exp")
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- together %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
right_join(mendel, by = c("gt", "sex")) %>%
mutate(exp = total*prop)
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male")
df_fem <- rbind(x, y) %>%
dplyr::filter(sex == "female")
p_male_pooled <- ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
p_female_pooled <- ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (0/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
grid.arrange(p_female_pooled, p_male_pooled, ncol = 2)
# plot each individual:
ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_male, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Females of F1 male (0/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_fem, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (0/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=18),
axis.text.y = element_text(size=20),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#66b032","#1982c4"))
