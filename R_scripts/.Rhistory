theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
## Figure 3B. Karyotyping
original Rmd: ~/Documents/GitHub/varroa-karyotyping/varroa karyotyping.Rmd
dat_karyo = dat %>%
dplyr::mutate(chromo_number = as.numeric(chromo_number)) %>%
expandRows("cell_count", drop = FALSE) %>%
dplyr::mutate(Indx = row_number(cell_count)) %>%
group_by(ID) %>%
dplyr::mutate(median_count = median(chromo_number))
p_kar_dens = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
# geom_histogram(position="dodge") +
geom_density(alpha=.2) +
ylab("Density") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
# or histogram:
p_karyo_hist = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_histogram(position="dodge", binwidth = 1) +
ylab("Count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
ggarrange(p_ploidy_dens, p_kar_dens, labels = c("A", "B"),
common.legend = TRUE, legend = "bottom")
ggarrange(p_ploidy_hist, p_karyo_hist, labels = c("A", "B"),
common.legend = TRUE, legend = "bottom")
data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.1, size=1.5)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=1, size=1.5)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.9, size=1.5)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.9, size=10)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.9, size=2)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.9, size=0.5)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.9, size=1.5)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
#density plot with rug
p_ploidy_dens_rug = data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.9, size=1.5)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
#density plot with rug
p_karyo_dens_rug = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
geom_rug(col="steelblue",alpha=0.9, size=1.5)+
geom_density(alpha=.2) +
ylab("Density") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
p_karyo_dens_rug
ggarrange(p_ploidy_dens_rug, p_karyo_dens_rug, labels = c("A", "B"),
ggarrange(p_ploidy_dens_rug, p_karyo_dens_rug, labels = c("A", "B"),
common.legend = TRUE, legend = "bottom")
p_ploidy_dens_rug
#density plot with rug
p_ploidy_dens_rug = data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.9, size=1.5)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
ggarrange(p_ploidy_dens_rug, p_karyo_dens_rug, labels = c("A", "B"),
common.legend = TRUE, legend = "bottom")
ggarrange(p_ploidy_hist, p_karyo_hist, labels = c("A", "B"),
common.legend = TRUE, legend = "bottom")
# or histogram:
p_karyo_hist = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_histogram(position="dodge", binwidth = 1) +
ylab("Density") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
ggarrange(p_ploidy_hist, p_karyo_hist, labels = c("A", "B"),
common.legend = TRUE, legend = "bottom")
data <- read.csv("/Users/nuriteliash/Documents/GitHub/varroa_ploidy/data/ploidy.csv") %>%
dplyr::mutate(Family = as.character(Family)) %>%
dplyr::mutate(stage_mature = case_when(
grepl("adult", Stage) ~ "Mature",
!grepl("adult", Stage) ~ "Imature"))
# change the labales
my_strip_labels <- as_labeller(c(
"Imature" = "Imature mites
n = 37",
"Mature" = "Mature mites
n = 38"))
# histogram plot:
p_ploidy_hist = data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_histogram(position="dodge") +
geom_density(alpha=.2) +
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy count
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
# density plot:
p_ploidy_dens = data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
# geom_histogram(position="dodge") +
geom_density(alpha=.2) +
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
#density plot with rug
p_ploidy_dens_rug = data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.9, size=1.5)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
dat <- read.csv("/Users/nuriteliash/Documents/GitHub/varroa-karyotyping/karyo_varroa.csv")
summary(dat)
dat_karyo = dat %>%
dplyr::mutate(chromo_number = as.numeric(chromo_number)) %>%
expandRows("cell_count", drop = FALSE) %>%
dplyr::mutate(Indx = row_number(cell_count)) %>%
group_by(ID) %>%
dplyr::mutate(median_count = median(chromo_number))
# dplyr::select(c("ID", "Sex","median_count"))
p_kar_dens = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
# geom_histogram(position="dodge") +
geom_density(alpha=.2) +
ylab("Density") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
#density plot with rug
p_karyo_dens_rug = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
geom_rug(col="steelblue",alpha=0.9, size=1.5)+
geom_density(alpha=.2) +
ylab("Density") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
# or histogram:
p_karyo_hist = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_histogram(position="dodge", binwidth = 1) +
ylab("Density") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
ggarrange(p_ploidy_hist, p_karyo_hist, labels = c("A", "B"),
common.legend = TRUE, legend = "bottom")
summary(dat)
dat$ID %>% filter(Sex == "Male")
dat %>% filter(Sex == "Male")
dat %>% filter(Sex == "male")
dat %>% filter(Sex == "male") %>% unique(ID)
dat %>% filter(Sex == "male") %>% unique("ID")
dat %>% filter(Sex == "male") %>% count(ID) unique("ID")
dat %>% filter(Sex == "male") %>% count(unique(ID))
dat %>% filter(Sex == "male") %>% count()
dat %>% filter(Sex == "male") %>% view() count()
dat %>% filter(Sex == "male") %>% view()
dat %>% filter(Sex == "male") %>% unique(ID)
dat %>% filter(Sex == "male") %>% unique("ID")
dat %>% filter(Sex == "male") %>% select(ID)
dat %>% filter(Sex == "male") %>% select(ID) %>% count(unique())
dat %>% filter(Sex == "male") %>% n_distinct(ID)
dat %>% filter(Sex == "male") %>% n_distinct("ID")
dat %>% filter(Sex == "male") %>% length(unique("ID"))
dat %>% filter(Sex == "male") %>% n_distinct()
dat %>% filter(Sex == "male") %>% n_distinct(ID)
dat %>% filter(Sex == "male") %>% n_distinct("ID")
dat %>% filter(Sex == "male") %>% mutate(ID = as.character(ID)) %>% n_distinct("ID")
n_distinct(dat$ID)
n_distinct(filter(dat, Sex=="male)$ID)
n_distinct(filter(dat, Sex=="male)$ID))
n_distinct(filter(dat, Sex=="male")$ID))
n_distinct(filter(dat, Sex=="male")$ID)
# how many males and females?
n_distinct(filter(dat, Sex=="male")$ID)
# how many males and females?
data_frame(males = n_distinct(filter(dat, Sex=="male")$ID),
females = n_distinct(filter(dat, Sex=="female")$ID))
# how many males and females?
tibble(males = n_distinct(filter(dat, Sex=="male")$ID),
females = n_distinct(filter(dat, Sex=="female")$ID))
# how many males and females?
mite_counts = tibble(males = n_distinct(filter(dat, Sex=="male")$ID),
females = n_distinct(filter(dat, Sex=="female")$ID))
mite_counts
View(mite_counts)
# how many males and females?
mite_counts = tibble(males = n_distinct(filter(dat, Sex=="male")$ID),
females = n_distinct(filter(dat, Sex=="female")$ID)) %>%
transpose()
tibble(males = n_distinct(filter(dat, Sex=="male")$ID),
females = n_distinct(filter(dat, Sex=="female")$ID)) %>%
transpose()
mite_counts
View(mite_counts)
# how many males and females?
mite_counts = tibble(males = n_distinct(filter(dat, Sex=="male")$ID),
females = n_distinct(filter(dat, Sex=="female")$ID))
View(mite_counts)
ggarrange(p_ploidy_hist, p_karyo_hist, labels = c("A", "B"),
common.legend = TRUE, legend = "bottom")
dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_histogram(position="dodge", binwidth = 1) +
#ylab("Density") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
# histogram plot:
p_ploidy_hist = data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_histogram(position="dodge") +
geom_density(alpha=.2) +
ylab("Count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy count
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
p_ploidy_hist
data <- read.csv("/Users/nuriteliash/Documents/GitHub/varroa_ploidy/data/ploidy.csv") %>%
dplyr::mutate(Family = as.character(Family)) %>%
dplyr::mutate(stage_mature = case_when(
grepl("adult", Stage) ~ "Mature",
!grepl("adult", Stage) ~ "Imature"))
# change the labales
my_strip_labels <- as_labeller(c(
"Imature" = "Imature mites
n = 37",
"Mature" = "Mature mites
n = 38"))
# histogram plot:
p_ploidy_hist = data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_histogram(position="dodge") +
geom_density(alpha=.2) +
ylab("Count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy count
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
# density plot:
p_ploidy_dens = data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
# geom_histogram(position="dodge") +
geom_density(alpha=.2) +
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
#density plot with rug
p_ploidy_dens_rug = data %>% dplyr::filter(body.part == "Body") %>%
ggplot(aes(x=Ploidy, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_rug(col="steelblue",alpha=0.9, size=1.5)+
ylab("Density") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite ploidy
Flow-cytometry") +
facet_grid(.~stage_mature, space = 'free',drop = F,
labeller = my_strip_labels) # add labels
dat <- read.csv("/Users/nuriteliash/Documents/GitHub/varroa-karyotyping/karyo_varroa.csv")
summary(dat)
# how many males and females?
mite_counts = tibble(males = n_distinct(filter(dat, Sex=="male")$ID),
females = n_distinct(filter(dat, Sex=="female")$ID))
mite_counts
dat_karyo = dat %>%
dplyr::mutate(chromo_number = as.numeric(chromo_number)) %>%
expandRows("cell_count", drop = FALSE) %>%
dplyr::mutate(Indx = row_number(cell_count)) %>%
group_by(ID) %>%
dplyr::mutate(median_count = median(chromo_number))
# dplyr::select(c("ID", "Sex","median_count"))
p_kar_dens = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
# geom_histogram(position="dodge") +
geom_density(alpha=.2) +
ylab("Density") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
#density plot with rug
p_karyo_dens_rug = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
geom_rug(col="steelblue",alpha=0.9, size=1.5)+
geom_density(alpha=.2) +
ylab("Density") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
# or histogram:
p_karyo_hist = dat_karyo %>%
ggplot(aes(x=chromo_number, color = Sex, fill = Sex)) +
geom_density(alpha=.2) +
geom_histogram(position="dodge", binwidth = 1) +
ylab("Count") +
xlab("Chromosome count") +
theme_classic2() +
theme(legend.position = "none") +
ggtitle("Varroa mite chromosome count
Karyotyping")
ggarrange(p_ploidy_hist, p_karyo_hist, labels = c("A", "B"),
common.legend = TRUE, legend = "bottom")
library("tidyverse")
library("dplyr")
library("ggplot2")
library("ggpubr")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
library("vcfR") # for extracting genotype data from a vcf file
library("janitor")
library("splitstackshape")
knitr::opts_chunk$set(echo = TRUE)
vcf <- read.vcfR("/Users/nuriteliash/Documents/GitHub/varroa-linkage-map/data/vcf_filter/Q40BIALLDP16HDP40mis.5Chr7/Q40BIALLDP16HDP40mis.5Chr7.recode.vcf", verbose = FALSE )
vcf
# extract the genotype for each site in each individual
gt <- extract.gt(vcf, element = "GT")
gt <- as.data.frame(t(gt)) %>%
rownames_to_column("ID")
#clean the ID names
gt$ID <- sub("_[^_]+$", "", gt$ID)
table <-gt %>%
t() %>%
as.data.frame() %>%
row_to_names(row_number = 1) %>%
dplyr::select(contains(c("son", "dat", "fnd"))) # keep only adults of F0, F1 and F2
# set the families (include only families with at least one adult F2)
family = grep("grndat|grnson",gt$ID, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_fnd")), all_vars(. == "0/1")) %>% # force F0 female to be homo, like her son
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/0")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "Male",
grepl("dat", sample) ~ "Female"))
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
samples
View(observed)
# define the group of abnormal males
abnorm_males = tibble(sample = c("240_241c_grnson", "400_401a_grnson","412_413a_grnson", "426_427b_grnson", "458_459a_grnson", "46_47d_grnson", "478_479-1a_grnson"), sex = "Male", normality = "abnormal")
samples_obs <- left_join(samples, observed, by=c("sample","gt")) %>% mutate(sex = case_when(
grepl("son", sample) ~ "Male",
grepl("dat", sample) ~ "Female")) %>%
group_by(sample) %>%
replace(is.na(.), 0) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::mutate(prop = n/total) %>%
left_join(abnorm_males, by = "sample") %>%
dplyr::select(-sex.y) %>%
replace(is.na(.), "normal") %>%
dplyr::rename(sex = sex.x) %>%
unite("type", sex,normality, remove = FALSE)
# make a table with the expected proportions for the different modes of reproduction:
haploid = data.frame(mode = "haploid", gt = c("0/0", "0/1", "1/1"),prop = c(1, 0, 0))
automixis = data.frame(mode = "automixis", gt = c("0/0", "0/1", "1/1"),prop = c(1, 0, 0))
sexual = data.frame(mode = "sexual",gt = c("0/0", "0/1", "1/1"),prop = c(0.5, 0.5, 0))
modes = rbind(Haploid,Automixis,Sexual)
# make a table with the expected proportions for the different modes of reproduction:
haploid = data.frame(mode = "Haploid", gt = c("0/0", "0/1", "1/1"),prop = c(1, 0, 0))
automixis = data.frame(mode = "Automixis", gt = c("0/0", "0/1", "1/1"),prop = c(1, 0, 0))
sexual = data.frame(mode = "Sexual",gt = c("0/0", "0/1", "1/1"),prop = c(0.5, 0.5, 0))
modes = rbind(Haploid,Automixis,Sexual)
