table %>%
#dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
obs <- table %>%
#dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
pivot_longer(everything()) %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
table %>%
#dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn"))
table %>%
#dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
table %>%
dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
table %>%
#dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
table %>%
dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
table
table %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
dplyr::filter_at(table, vars(matches("_son")), all_vars(. == "0/0"))
table %>%
as.data.frame() %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0"))
table %>%
dplyr::select(contains("_")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0"))
table %>%
dplyr::select(contains("_"))
table
table %>%
dplyr::select(contains("_")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0"))
obs <- table %>%
dplyr::select(contains("_")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>% view()
table %>%
dplyr::select(contains("_")) %>%
dplyr::filter_at(vars(matches("_son")), any_vars(. == "0/0"))
obs <- table %>%
dplyr::filter_at(vars(matches("_son")), any_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), any_vars(. == "0/1")) %>%view()
obs <- table %>%
dplyr::filter_at(vars(matches("_son")), any_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), any_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
pivot_longer(everything()) %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0.5, 0.5,0))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(0.5, 0,0.5))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex))%>% mutate(gt = as.character(gt))
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- obs %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
left_join(mendel, multi_by = c("sex")) %>%
mutate(exp = total*prop)
dat
# prepare the data frame
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
############
# for females
df_female <- rbind(x, y) %>%
dplyr::filter(sex == "female") %>%
dplyr::select(c("sample", "gt", "type", "count"))
### Specify the order of factor levels. Otherwise, R will alphabetize them
df_female =
mutate(df_female,
sample = factor(sample, levels=unique(sample)),
gt = factor(gt, levels=unique(gt)),
type = factor(type, levels=unique(type))
)
### Cross-tabulate the data
Data.xtabs = xtabs(count ~ type + gt + sample,
data=df_female)
ftable(Data.xtabs)
# Cochran–Mantel–Haenszel test
mantelhaen.test(Data.xtabs)
# Woolf test for homogeneity of odds ratios across strata. If significant, C-M-H test is not appropriate
woolf_test(Data.xtabs)
############
### for males
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male") %>%
dplyr::select(c("sample", "gt", "type", "count"))
### Specify the order of factor levels. Otherwise, R will alphabetize them
df_male =
mutate(df_male,
sample = factor(sample, levels=unique(sample)),
gt = factor(gt, levels=unique(gt)),
type = factor(type, levels=unique(type))
)
### Cross-tabulate the data
Data.xtabs = xtabs(count ~ type + gt + sample,
data=df_male)
ftable(Data.xtabs)
# Cochran–Mantel–Haenszel test
mantelhaen.test(Data.xtabs)
# Woolf test for homogeneity of odds ratios across strata. If significant, C-M-H test is not appropriate
woolf_test(Data.xtabs)
Data.xtabs
df_female
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df <- rbind(x, y)
ggplot(df, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F1 male (0/0) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df, gt == "0/0"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample, labeller = labeller(sample = c("F2_fem_1" = "Female", "F2_fem_2" = "Female", "F2_male" = "Male"))) +
labs(fill = "Genotype") +
theme_classic()
df
View(df)
female
df <- rbind(x, y) %>%
dplyr::filter(sex == "female")
df <- rbind(x, y) %>%
dplyr::filter(sex == "female")
ggplot(df, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F1 male (0/0) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df, gt == "0/0"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample, labeller = labeller(sample = c("F2_fem_1" = "Female", "F2_fem_2" = "Female", "F2_male" = "Male"))) +
labs(fill = "Genotype") +
theme_classic()
ggplot(df, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F1 male (0/0) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df, gt == "0/0"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()
table %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
table %>%
dplyr::select(starts_with("502"))
table %>%
dplyr::select(starts_with("502"))
obs <- table %>%
dplyr::select(starts_with("502"))
obs <- table %>%
dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
obs <- table %>%
dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
pivot_longer(everything()) %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0.5, 0.5,0))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(0.5, 0,0.5))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex))%>% mutate(gt = as.character(gt))
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- obs %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
left_join(mendel, multi_by = c("sex")) %>%
mutate(exp = total*prop)
dat
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df <- rbind(x, y) %>%
dplyr::filter(sex == "female")
ggplot(df, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F1 male (0/0) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df, gt == "0/0"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()
obs <- table %>%
#dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
obs <- table %>%
dplyr::select(starts_with("502")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
obs <- table %>%
dplyr::select(starts_with("600")) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1"))
family
obs <- data.frame()
pooled_female$observed
obs <- list()
obs <- list()
for (fam in family) {
obs(fam) <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
pivot_longer(everything()) %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
View(obs)
obs <- list()
for (fam in family) {
obs(fam) <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) }
obs <- list()
for (fam in family) {
obs[fam] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) }
obs
obs$63
obs$"63"
class(obs$"63")
as.data.frame(obs$"63")
63 <- as.data.frame(obs$"63")
t <- as.data.frame(obs$"63")
View(t)
t <- as.data.frame(obs$"502")
remove(obs)
for (fam in family) {
obs[fam] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) }
#obs <- list()
obs <- []
#obs <- list()
obs <- data_frame()
#obs <- list()
obs <- data_frame()
for (fam in family) {
obs[fam] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) }
obs <- list()
for (fam in family) {
obs[fam] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) }
t <- as.data.frame(obs$"502")
obs <- list()
for (fam in family) {
obs[fam] <- table %>%
dplyr::select(starts_with(fam)) } #%>%
t <- as.data.frame(obs$"502")
obs <- list()
for (fam in family) {
obs[fam] <- table} %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) }
obs <- list()
for (fam in family) {
obs[fam] <- table} #%>%
warnings()
obs <- list()
for (fam in family) {
obs[fam] <- data_frame()
obs[[]] <- table}
obs <- list()
for (fam in family) {
obs[fam] <- data_frame()
obs[[fam]] <- table}
pooled_female[1]
class(pooled_female[1])
family
obs <- list(family)
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam))}
obs$63
obs$"502"
t <- obs$"502"
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
pivot_longer(everything()) %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) } #%>%
t <- obs$"502"
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) } #%>%
t <- obs$"502"
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
pivot_longer(everything())}# %>%
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
dplyr::pivot_longer(everything()) }
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything()) }
t <- obs$"502"
t <- obs$"502"
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) }
t <- obs$"502"
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) }
t <- obs$"502"
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) }
t <- obs$"502"
obs$"502"
t <- obs$"502"
t <- obs$"502" %>% view()
f <- obs$"63" %>% view()
obs$"63"
family
obs$"600"
gt$ID
family
family = family[-family["63"]]
family = family[-1]
family
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) }
obs$"600" %>% view()
obs$"248" %>% view()
obs$"284" %>% view()
#######
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything()) }
# set the families
family = unique(str_extract(gt$ID, "[^_]+"))
# set the families
family = unique(str_extract(gt$ID, "[^_]+"))
exclude = c("63")
family = family[-which(family %in% exclude)]
family
gt$ID
family = c("502", "600")
family = c("502", "600", "240")
#######
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())
#######
obs <- list(family)
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything()) }
family
family
#########
family = c("502", "600", "240")
