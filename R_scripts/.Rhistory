# Step 1: Call the pdf command to start the plot
png(file = "/Users/nuriteliash/My Drive/(1) OIST work/Articles_OIST/varroa pedigree MS/Figures/recomb_manual.png",   # The directory you want to save the file in
width = 4, # The width of the plot in inches
height = 4) # The height of the plot in inches
# Step 2: Create the plot with R code
# plot the median of recombination freq, per chromosome, filter out families with low number of sites
ggplot(filter(obs_dfAll, total > 10), aes(x=Chr, y=freq_cM_bp, fill=sex)) +
geom_boxplot() +
facet_wrap(~Chr, scale="free") +
theme_classic() +
theme(axis.text.x=element_blank()) +
ylab("Recombintaion frequency (cM/bp)") +
xlab(element_blank())
# Step 3: Run dev.off() to create the file!
dev.off()
# Step 1: Call the pdf command to start the plot
pdf(file = "/Users/nuriteliash/My Drive/(1) OIST work/Articles_OIST/varroa pedigree MS/Figures/recomb_manual.pdf",   # The directory you want to save the file in
width = 4, # The width of the plot in inches
height = 4) # The height of the plot in inches
# Step 2: Create the plot with R code
# plot the median of recombination freq, per chromosome, filter out families with low number of sites
ggplot(filter(obs_dfAll, total > 10), aes(x=Chr, y=freq_cM_bp, fill=sex)) +
geom_boxplot() +
facet_wrap(~Chr, scale="free") +
theme_classic() +
theme(axis.text.x=element_blank()) +
ylab("Recombintaion frequency (cM/bp)") +
xlab(element_blank())
# Step 3: Run dev.off() to create the file!
while (!is.null(dev.list())) dev.off()
# Step 2: Create the plot with R code
# plot the median of recombination freq, per chromosome, filter out families with low number of sites
ggplot(filter(obs_dfAll, total > 10), aes(x=Chr, y=freq_cM_bp, fill=sex)) +
geom_boxplot() +
facet_wrap(~Chr, scale="free") +
theme_classic() +
theme(axis.text.x=element_blank()) +
ylab("Recombintaion frequency (cM/bp)") +
xlab(element_blank())
library("tidyverse")
library("dplyr")
library("ggplot2")
library("ggpubr")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
knitr::opts_chunk$set(echo = TRUE)
ind_het <- read_delim("/Users/nuriteliash/Documents/GitHub/varroa-linkage-map/data/vcf_filter/Q40BIALLDP16HDP40mis.5Chr7/Q40BIALLDP16HDP40mis.5Chr7.het", delim = "\t",
col_names = c("ind","homo_ob", "homo_ex", "nsites", "f"), skip = 1)
# find all 'female' and 'male'
male <- grep("son",ind_het$ind)
female <- grep("dat|fn|sis",ind_het$ind)
ind_het_sex <- ind_het %>%
mutate(sex = ifelse(row_number() %in% female, "female", ifelse(row_number() %in% male, "male", "not-determined"))) %>%
mutate(hom_prop =  homo_ob/nsites) %>%
mutate(het_prop = (nsites-homo_ob)/nsites) %>%
#keep only adult mites, for which sex is absolutly determined (exclude nymphs and eggs ("not determined"))
dplyr::filter(sex %in% c("male", "female"))
# is there a significant difference in the proportion of heterozygotic sites between males and females?5
wil_var <- wilcox.test(het_prop ~ sex, alternative = "two.sided", data = ind_het_sex)
t.test(asin(sqrt(het_prop)) ~ sex, alternative = "two.sided", data = ind_het_sex)
# no significant different (both wilcoxone and welch-test)
# plot heterozygosity proportion, in each sex
p_var <- ggplot(ind_het_sex) +
geom_boxplot(aes(x = sex, y = het_prop, fill = sex)) + scale_y_continuous() +
theme_classic() +
labs(title = "Varroa mite",
subtitle = paste("p-value=",  wil_var$p.value)) +
ylab("Proportion of heterozygotic sites")
# plot heterozygocity proportion, in each individual, color code by sex
p_var_ind <- ggplot(ind_het_sex, aes(x=ind, y=het_prop, color=sex)) +
geom_point(size=3) +
theme_classic() +
ggtitle("Proportion of heterzygotic sites per individual") +
xlab("Sample") +
ylab("Proportion of het sites")
ind_het_bee <- read_delim("/Users/nuriteliash/Documents/GitHub/Variant_Calling_bees/data/vcf_stats/bee.het", delim = "\t",
col_names = c("ind","homo_ob", "homo_ex", "nsites", "f"), skip = 1)
# add the sex of each sample, and the proportion of homosyzgotic and hetero sites
sex <- read.csv("/Users/nuriteliash/Documents/GitHub/Variant_Calling_bees/data/meta.csv")
ind_het_bee <- left_join(ind_het_bee,sex, by ="ind") %>%
mutate(hom_prop =  homo_ob/nsites) %>%
mutate(het_prop = (nsites-homo_ob)/nsites)
# is there a significant difference in the proportion of heterozygotic sites between males and females?5
wil_bee <- wilcox.test(het_prop ~ sex, alternative = "two.sided", data = ind_het_bee)
t.test(asin(sqrt(het_prop)) ~ sex, alternative = "two.sided", data = ind_het_bee)
# no significant different (both wilcoxone and welch-test)
# plot heterozygocity proportion, in each sex
p_bee <- ggplot(ind_het_bee) +
geom_boxplot(aes(x = sex, y = het_prop, fill = sex)) + scale_y_continuous() +
theme_classic() +
labs(title = "Honeybee",
subtitle = paste("p-value=",  wil_bee$p.value)) +
ylab("Proportion of heterozygotic sites")
# plot heterozygosity proportion, in each individual, color code by sex
p_bee_ind <- ggplot(ind_het_bee, aes(x=ind, y=het_prop, color=sex)) +
geom_point(size=3) +
theme_classic() +
ggtitle("Proportion of heterzygotic sites per bee") +
xlab("Sample") +
ylab("Proportion of het sites")
grid.arrange(top= grid::textGrob("Proportion of heterozygotic sites in males and females", gp=grid::gpar(fontsize=20)), p_bee, p_var, nrow = 1)
grid.arrange(gp=grid::gpar(fontsize=20)), p_bee, p_var, nrow = 1)
grid.arrange(p_bee, p_var, nrow = 1)
library("tidyverse")
library("plyr")
library("dplyr")
library("ggplot2")
library("scales")
library("ggpubr")
library("gridExtra")
library("grid")
library("GGally")
library("vcfR") # for extracting genotype data from a vcf file
library("data.table")
library("stringr")
library("janitor")
library("gmodels")
library("rstatix")
library("freqtables")
library("broom")
library("DescTools") # for the Goodness-of-Fit test, 3 variables; and for Breslow-Day Test for Homogeneity of the Odds Ratios
library("vcd") # for the woolf test testign log odds for each pair
library("patchwork") # for gathering the plots
#library("fuzzyjoin") # to join tables based on a string in a column
#library("aspi") # Repeated G–tests of Goodness-of-Fit, work only for 2 variables..
#library("RVAideMemoire") # Repeated G–tests of Goodness-of-Fit, work only for 2 variables...
#library("InfoTrad")
#library("ggthemes") # for more colors in the ggplot
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE,
fig.width = 8,
fig.asp = 0.6,
out.width = "100%")
#fig.width = 6,fig.asp = 0.8,out.width = "100%"
vcf <- read.vcfR("/Users/nuriteliash/Documents/GitHub/varroa-linkage-map/data/vcf_filter/Q40BIALLDP16HDP40mis.5Chr7/Q40BIALLDP16HDP40mis.5Chr7.recode.vcf", verbose = FALSE )
vcf
# extract the genotype for each site in each individual
gt <- extract.gt(vcf, element = "GT")
gt <- as.data.frame(t(gt)) %>%
rownames_to_column("ID")
#clean the ID names
gt$ID <- sub("_[^_]+$", "", gt$ID)
table <-  gt %>%
t() %>%
as.data.frame() %>%
row_to_names(row_number = 1) %>%
dplyr::select(contains(c("son", "dat", "fnd"))) # keep only adults of F0, F1 and F2
# Prepare table with observed and expected counts, per family:
# set the families (include only families with at least one adult F2)
family = grep("grndat|grnson",gt$ID, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/0")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>% mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female")) %>%
group_by(sample) %>%
replace(is.na(.), 0) %>%
mutate(total = as.numeric(sum(obs)))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(1,0,0))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(1,0,0))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex))%>% mutate(gt = as.character(gt))
# mutate(type = "exp")
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- together %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
right_join(mendel, by = c("gt", "sex")) %>%
mutate(exp = total*prop)
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male")
df_fem <- rbind(x, y) %>%
dplyr::filter(sex == "female")
p_male_pooled <- ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/0) x female (0/0)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/1") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
p_female_pooled <- ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (0/0) x female (0/0)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/1") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
grid.arrange(p_female_pooled, p_male_pooled, ncol = 2)
# plot ratio for each individual:
# males:
ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/0) x female (0/0)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_male, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
# and females:
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Females of F1 male (0/0) x female (0/0)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_fem, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
# set the families (include only families with at least one adult F2)
family = grep("grndat|grnson",gt$ID, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "0/0")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>% mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female")) %>%
group_by(sample) %>%
replace(is.na(.), 0) %>%
mutate(total = as.numeric(sum(obs)))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0.5, 0.5, 0))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(0.5, 0, 0.5))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex)) %>% mutate(gt = as.character(gt))
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- together %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
right_join(mendel, by = c("gt", "sex")) %>%
mutate(exp = total*prop)
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male")
df_fem <- rbind(x, y) %>%
dplyr::filter(sex == "female")
p_male_pooled <- ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/0) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
p_female_pooled <- ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (0/0) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
grid.arrange(p_female_pooled, p_male_pooled, ncol = 2)
ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (0/0) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_male, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Females of F1 male (0/0) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_fem, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
# set the families (include only families with at least one adult F2)
family = grep("grndat|grnson",gt$ID, value=TRUE) %>%
str_extract("[^_]+")  %>%
unique()
# define a list to put all the data frames in
obs <- list()
for (fam in family) {
obs[[fam]] <- table %>%
dplyr::select(starts_with(fam)) %>%
dplyr::filter_at(vars(matches("_son")), all_vars(. == "1/1")) %>%
dplyr::filter_at(vars(matches("_dat")), all_vars(. == "0/1")) %>%
dplyr::select(contains("grn")) %>%
tidyr::pivot_longer(everything())  %>%
dplyr::rename(sample = name, gt = value) %>%
dplyr::count(sample, gt, .drop = FALSE) %>%
dplyr::filter(gt %in% c("0/0", "1/1", "0/1")) %>%
mutate(n = as.numeric(n)) %>%
group_by(sample) %>%
mutate(total = as.numeric(sum(n))) %>%
dplyr::rename(obs = n) %>%
mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female"))
}
# bind all families together, to a final data frame containing all observed counts
observed <- do.call("rbind", obs) %>% mutate(sample = as.character(sample))
samples <- data.frame(sample = rep(unique(observed$sample), each =3), gt = rep(c("0/0", "0/1", "1/1")))
together <- left_join(samples, observed, by=c("sample","gt")) %>% mutate(sex = case_when(
grepl("son", sample) ~ "male",
grepl("dat", sample) ~ "female")) %>%
group_by(sample) %>%
replace(is.na(.), 0) %>%
mutate(total = as.numeric(sum(obs)))
# state the expected site proportion of each genotype and sex under a perfect mendelian segregation of F2
fem_exp <- data.frame(sex = "female", gt = c("0/0", "0/1", "1/1") , prop = c(0,0.5,0.5))
male_exp <- data.frame(sex = "male",gt = c("0/0", "0/1", "1/1"),prop = c(0.5,0,0.5))
mendel <- bind_rows(fem_exp,male_exp) %>% mutate(sex = as.character(sex))%>% mutate(gt = as.character(gt))
# mutate(type = "exp")
# using on the total genotypes count of sites per sample, calculate the expected counts, and add them to the observed counts into a final dat table
dat <- together %>%
#mutate(sample = as.character(sample)) %>%
mutate(gt = as.character(gt)) %>%
right_join(mendel, by = c("gt", "sex")) %>%
mutate(exp = total*prop)
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male")
df_fem <- rbind(x, y) %>%
dplyr::filter(sex == "female")
p_male_pooled <- ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
p_female_pooled <- ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
grid.arrange(p_female_pooled, p_male_pooled, ncol = 2)
ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_male, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Females of F1 male (1/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_fem, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
x <- dat %>%
dplyr::select(c("sample","gt","sex", "exp","prop", "total")) %>%
mutate(type = "exp") %>%
dplyr::rename(count = exp)
y <- dat %>%
dplyr::select(c("sample","gt","sex", "obs","total")) %>%
mutate(type = "obs") %>%
dplyr::rename(count = obs) %>%
mutate(prop = (count/total))
df_male <- rbind(x, y) %>%
dplyr::filter(sex == "male")
df_fem <- rbind(x, y) %>%
dplyr::filter(sex == "female")
p_male_pooled <- ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 males") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_male %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
p_female_pooled <- ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 females") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 females of F1 male (1/1) x female (0/1)",
subtitle = paste0("Pooled sites = ", df_fem %>% dplyr::filter(gt == "0/0") %>% dplyr::filter(type == "obs") %>% summarise(sum(total)) %>% as.numeric())) +
scale_x_discrete("type", labels = c("Expected","Observed")) +
labs(fill = "Genotype") +
theme_classic() +
theme(axis.text.x = element_text(size=15),
axis.title.x = element_blank()) +scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
grid.arrange(p_female_pooled, p_male_pooled, ncol = 2)
ggplot(df_male, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Males of F1 male (1/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_male, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
ggplot(df_fem, aes(fill=gt, y=prop, x=type)) +
geom_bar(position="fill", stat="identity", ) +
xlab("F2 siblings") +
ylab("Proportion of F2 genotype") +
labs(title = "F2 Females of F1 male (1/1) x female (0/1)") +
# geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +
geom_text(data = filter(df_fem, gt == "1/1"), aes(y=prop, x=type, label=total), vjust = 0) +
facet_wrap(~ sample) +
labs(fill = "Genotype") +
theme_classic()+scale_fill_manual(values=c("#ffbf00", "#9bc53d","#1982c4"))
